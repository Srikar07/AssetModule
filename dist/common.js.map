{"version":3,"sources":["./src/app/modules/asset/_services/fake/deals.service.ts","./src/app/_fake/fake-helpers/http-extenstions.ts","./src/app/modules/auth/registration/confirm-password.validator.ts","./src/app/modules/auth/_models/user.model.ts","./src/app/modules/i18n/translation.module.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["\r\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\r\nimport { exhaustMap, map } from 'rxjs/operators';\r\nimport { TableService, TableResponseModel, ITableState, BaseModel, PaginatorState, SortState, GroupingState } from '../../../../_metronic/shared/crud-table';\r\nimport { Deal } from '../../_models/deals.model';\r\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\nconst DEFAULT_STATE: ITableState = {\r\n    filter: {},\r\n    paginator: new PaginatorState(),\r\n    sorting: new SortState(),\r\n    searchTerm: '',\r\n    grouping: new GroupingState(),\r\n    entityId: undefined\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DealsService extends TableService<Deal> implements OnDestroy {\r\n    API_URL = `${environment.apiUrl}/deals`;\r\n    constructor(@Inject(HttpClient) http, private baseHttp: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    find(tableState: ITableState): Observable<TableResponseModel<Deal>> {\r\n        return this.http.get<Deal[]>(this.API_URL).pipe(\r\n            map((response: Deal[]) => {\r\n                const filteredResult = baseFilter(response, tableState);\r\n                const result: TableResponseModel<Deal> = {\r\n                    items: filteredResult.items,\r\n                    total: filteredResult.total\r\n                };\r\n\r\n                console.log(result);\r\n                return result;\r\n            })\r\n        );\r\n    }\r\n\r\n    deleteItems(ids: number[] = []): Observable<any> {\r\n        const tasks$ = [];\r\n        ids.forEach(id => {\r\n            tasks$.push(this.delete(id));\r\n        });\r\n        return forkJoin(tasks$);\r\n    }\r\n\r\n    updateStatusForItems(ids: number[], status: number): Observable<any> {\r\n        return this.http.get<Deal[]>(this.API_URL).pipe(\r\n            map((customers: Deal[]) => {\r\n                return customers.filter(c => ids.indexOf(c.id) > -1).map(c => {\r\n                    //c.statusName = status;\r\n                    return c;\r\n                });\r\n            }),\r\n            exhaustMap((customers: Deal[]) => {\r\n                const tasks$ = [];\r\n                customers.forEach(customer => {\r\n                    tasks$.push(this.update(customer));\r\n                });\r\n                return forkJoin(tasks$);\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sb => sb.unsubscribe());\r\n    }\r\n}\r\n","import { ITableState } from '../../_metronic/shared/crud-table';\r\n\r\nexport function baseFilter(entities: any[], requestObj: ITableState) {\r\n  // Filtration\r\n  let entitiesResult = filterArray(entities, requestObj);\r\n  // Search\r\n  entitiesResult = searchInArray(entitiesResult, requestObj.searchTerm);\r\n\r\n  // Sorting\r\n  // start\r\n  if (requestObj.sorting.column) {\r\n    entitiesResult = sortArray(entitiesResult, requestObj.sorting.column, requestObj.sorting.direction);\r\n  }\r\n  // end\r\n\r\n  // Paginator\r\n  // start\r\n  const totalCount = entitiesResult.length;\r\n  const startPosition = (requestObj.paginator.page - 1) * requestObj.paginator.pageSize;\r\n  const endPosition = startPosition + requestObj.paginator.pageSize;\r\n  entitiesResult = entitiesResult.slice(startPosition, endPosition);\r\n  // end\r\n\r\n  const responseObj = {\r\n    items: entitiesResult,\r\n    total: totalCount\r\n  };\r\n  return responseObj;\r\n}\r\n\r\nexport function sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\r\n  if (!sortField) {\r\n    return incomingArray;\r\n  }\r\n\r\n  let result: any[] = [];\r\n  result = incomingArray.sort((a, b) => {\r\n    if (a[sortField] < b[sortField]) {\r\n      return sortOrder === 'asc' ? -1 : 1;\r\n    }\r\n\r\n    if (a[sortField] > b[sortField]) {\r\n      return sortOrder === 'asc' ? 1 : -1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function filterArray(incomingArray: any[], requestObj: ITableState): any[] {\r\n  if (!requestObj || !requestObj.filter) {\r\n    return incomingArray;\r\n  }\r\n\r\n  let result: any[] = incomingArray;\r\n  const filtrationFields = Object.keys(requestObj.filter);\r\n  filtrationFields.forEach((keyName: string) => {\r\n    // tslint:disable-next-line:triple-equals\r\n    result = result.filter(el => el[keyName] == requestObj.filter[keyName]);\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function searchInArray(incomingArray: any[], searchTerm: string = ''): any[] {\r\n  if (!searchTerm) {\r\n    return incomingArray;\r\n  }\r\n\r\n  const acceptableForSearchTypes = { number: 1, string: 2 };\r\n  const result = incomingArray.filter(row => {\r\n    let termIsFoundInRow = false;\r\n    const keys = Object.keys(row).filter(keyName => acceptableForSearchTypes[typeof row[keyName]] && row[keyName]);\r\n    for (const keyName of keys) {\r\n      if (row[keyName].toString().toLowerCase().indexOf(searchTerm) > -1) {\r\n        termIsFoundInRow = true;\r\n        break;\r\n      }\r\n    }\r\n    return termIsFoundInRow;\r\n  });\r\n  return result;\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { AuthModel } from './auth.model';\r\nimport { AddressModel } from './address.model';\r\nimport { SocialNetworksModel } from './social-networks.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  pic: string;\r\n  roles: number[];\r\n  occupation: string;\r\n  companyName: string;\r\n  phone: string;\r\n  address?: AddressModel;\r\n  socialNetworks?: SocialNetworksModel;\r\n  // personal information\r\n  firstname: string;\r\n  lastname: string;\r\n  website: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean,\r\n    sms: boolean,\r\n    phone: boolean\r\n  };\r\n  // email settings\r\n  emailSettings: {\r\n    emailNotification: boolean,\r\n    sendCopyToPersonalEmail: boolean,\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean,\r\n      youAreSentADirectMessage: boolean,\r\n      someoneAddsYouAsAsAConnection: boolean,\r\n      uponNewOrder: boolean,\r\n      newMembershipApproval: boolean,\r\n      memberRegistration: boolean\r\n    },\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\r\n      tipsOnGettingMoreOutOfKeen: boolean,\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\r\n      tipsOnMetronicBusinessProducts: boolean\r\n    }\r\n  };\r\n\r\n  setUser(user: any) {\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.fullname || '';\r\n    this.email = user.email || '';\r\n    this.pic = user.pic || './assets/media/users/default.jpg';\r\n    this.roles = user.roles || [];\r\n    this.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.phone = user.phone || '';\r\n    this.address = user.address;\r\n    this.socialNetworks = user.socialNetworks;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule],\r\n  exports: [CommonModule, TranslateModule],\r\n})\r\nexport class TranslationModule {}\r\n"],"sourceRoot":"webpack:///"}