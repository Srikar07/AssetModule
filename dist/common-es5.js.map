{"version":3,"sources":["webpack:///src/app/modules/asset/_services/fake/deals.service.ts","webpack:///src/app/_fake/fake-helpers/http-extenstions.ts","webpack:///src/app/modules/auth/registration/confirm-password.validator.ts","webpack:///src/app/modules/auth/_models/user.model.ts","webpack:///src/app/modules/i18n/translation.module.ts"],"names":["DEFAULT_STATE","filter","paginator","sorting","searchTerm","grouping","entityId","undefined","DealsService","http","baseHttp","API_URL","apiUrl","tableState","get","pipe","response","filteredResult","result","items","total","console","log","ids","tasks$","forEach","id","push","status","customers","c","indexOf","map","customer","update","subscriptions","sb","unsubscribe","providedIn","baseFilter","entities","requestObj","entitiesResult","filterArray","searchInArray","column","sortArray","direction","totalCount","length","startPosition","page","pageSize","endPosition","slice","responseObj","incomingArray","sortField","sortOrder","sort","a","b","filtrationFields","Object","keys","keyName","el","acceptableForSearchTypes","number","string","row","termIsFoundInRow","toString","toLowerCase","ConfirmPasswordValidator","control","password","value","confirmPassword","setErrors","ConfirmPassword","UserModel","user","username","fullname","email","pic","roles","occupation","companyName","phone","address","socialNetworks","TranslationModule","imports","exports"],"mappings":"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","file":"common-es5.js","sourcesContent":["\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\nimport { exhaustMap, map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState, BaseModel, PaginatorState, SortState, GroupingState } from '../../../../_metronic/shared/crud-table';\nimport { Deal } from '../../_models/deals.model';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { Router } from '@angular/router';\n\nconst DEFAULT_STATE: ITableState = {\n    filter: {},\n    paginator: new PaginatorState(),\n    sorting: new SortState(),\n    searchTerm: '',\n    grouping: new GroupingState(),\n    entityId: undefined\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DealsService extends TableService<Deal> implements OnDestroy {\n    API_URL = `${environment.apiUrl}/deals`;\n    constructor(@Inject(HttpClient) http, private baseHttp: HttpClient) {\n        super(http);\n    }\n\n    find(tableState: ITableState): Observable<TableResponseModel<Deal>> {\n        return this.http.get<Deal[]>(this.API_URL).pipe(\n            map((response: Deal[]) => {\n                const filteredResult = baseFilter(response, tableState);\n                const result: TableResponseModel<Deal> = {\n                    items: filteredResult.items,\n                    total: filteredResult.total\n                };\n\n                console.log(result);\n                return result;\n            })\n        );\n    }\n\n    deleteItems(ids: number[] = []): Observable<any> {\n        const tasks$ = [];\n        ids.forEach(id => {\n            tasks$.push(this.delete(id));\n        });\n        return forkJoin(tasks$);\n    }\n\n    updateStatusForItems(ids: number[], status: number): Observable<any> {\n        return this.http.get<Deal[]>(this.API_URL).pipe(\n            map((customers: Deal[]) => {\n                return customers.filter(c => ids.indexOf(c.id) > -1).map(c => {\n                    //c.statusName = status;\n                    return c;\n                });\n            }),\n            exhaustMap((customers: Deal[]) => {\n                const tasks$ = [];\n                customers.forEach(customer => {\n                    tasks$.push(this.update(customer));\n                });\n                return forkJoin(tasks$);\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(sb => sb.unsubscribe());\n    }\n}\n","import { ITableState } from '../../_metronic/shared/crud-table';\n\nexport function baseFilter(entities: any[], requestObj: ITableState) {\n  // Filtration\n  let entitiesResult = filterArray(entities, requestObj);\n  // Search\n  entitiesResult = searchInArray(entitiesResult, requestObj.searchTerm);\n\n  // Sorting\n  // start\n  if (requestObj.sorting.column) {\n    entitiesResult = sortArray(entitiesResult, requestObj.sorting.column, requestObj.sorting.direction);\n  }\n  // end\n\n  // Paginator\n  // start\n  const totalCount = entitiesResult.length;\n  const startPosition = (requestObj.paginator.page - 1) * requestObj.paginator.pageSize;\n  const endPosition = startPosition + requestObj.paginator.pageSize;\n  entitiesResult = entitiesResult.slice(startPosition, endPosition);\n  // end\n\n  const responseObj = {\n    items: entitiesResult,\n    total: totalCount\n  };\n  return responseObj;\n}\n\nexport function sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\n  if (!sortField) {\n    return incomingArray;\n  }\n\n  let result: any[] = [];\n  result = incomingArray.sort((a, b) => {\n    if (a[sortField] < b[sortField]) {\n      return sortOrder === 'asc' ? -1 : 1;\n    }\n\n    if (a[sortField] > b[sortField]) {\n      return sortOrder === 'asc' ? 1 : -1;\n    }\n\n    return 0;\n  });\n  return result;\n}\n\nexport function filterArray(incomingArray: any[], requestObj: ITableState): any[] {\n  if (!requestObj || !requestObj.filter) {\n    return incomingArray;\n  }\n\n  let result: any[] = incomingArray;\n  const filtrationFields = Object.keys(requestObj.filter);\n  filtrationFields.forEach((keyName: string) => {\n    // tslint:disable-next-line:triple-equals\n    result = result.filter(el => el[keyName] == requestObj.filter[keyName]);\n  });\n  return result;\n}\n\nexport function searchInArray(incomingArray: any[], searchTerm: string = ''): any[] {\n  if (!searchTerm) {\n    return incomingArray;\n  }\n\n  const acceptableForSearchTypes = { number: 1, string: 2 };\n  const result = incomingArray.filter(row => {\n    let termIsFoundInRow = false;\n    const keys = Object.keys(row).filter(keyName => acceptableForSearchTypes[typeof row[keyName]] && row[keyName]);\n    for (const keyName of keys) {\n      if (row[keyName].toString().toLowerCase().indexOf(searchTerm) > -1) {\n        termIsFoundInRow = true;\n        break;\n      }\n    }\n    return termIsFoundInRow;\n  });\n  return result;\n}\n","import { AbstractControl } from '@angular/forms';\n\nexport class ConfirmPasswordValidator {\n  /**\n   * Check matching password with confirm password\n   * @param control AbstractControl\n   */\n  static MatchPassword(control: AbstractControl) {\n    const password = control.get('password').value;\n\n    const confirmPassword = control.get('cPassword').value;\n\n    if (password !== confirmPassword) {\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\n    } else {\n      return null;\n    }\n  }\n}\n","import { AuthModel } from './auth.model';\nimport { AddressModel } from './address.model';\nimport { SocialNetworksModel } from './social-networks.model';\n\nexport class UserModel extends AuthModel {\n  id: number;\n  username: string;\n  password: string;\n  fullname: string;\n  email: string;\n  pic: string;\n  roles: number[];\n  occupation: string;\n  companyName: string;\n  phone: string;\n  address?: AddressModel;\n  socialNetworks?: SocialNetworksModel;\n  // personal information\n  firstname: string;\n  lastname: string;\n  website: string;\n  // account information\n  language: string;\n  timeZone: string;\n  communication: {\n    email: boolean,\n    sms: boolean,\n    phone: boolean\n  };\n  // email settings\n  emailSettings: {\n    emailNotification: boolean,\n    sendCopyToPersonalEmail: boolean,\n    activityRelatesEmail: {\n      youHaveNewNotifications: boolean,\n      youAreSentADirectMessage: boolean,\n      someoneAddsYouAsAsAConnection: boolean,\n      uponNewOrder: boolean,\n      newMembershipApproval: boolean,\n      memberRegistration: boolean\n    },\n    updatesFromKeenthemes: {\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\n      tipsOnGettingMoreOutOfKeen: boolean,\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\n      tipsOnMetronicBusinessProducts: boolean\n    }\n  };\n\n  setUser(user: any) {\n    this.id = user.id;\n    this.username = user.username || '';\n    this.password = user.password || '';\n    this.fullname = user.fullname || '';\n    this.email = user.email || '';\n    this.pic = user.pic || './assets/media/users/default.jpg';\n    this.roles = user.roles || [];\n    this.occupation = user.occupation || '';\n    this.companyName = user.companyName || '';\n    this.phone = user.phone || '';\n    this.address = user.address;\n    this.socialNetworks = user.socialNetworks;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule],\n  exports: [CommonModule, TranslateModule],\n})\nexport class TranslationModule {}\n"]}