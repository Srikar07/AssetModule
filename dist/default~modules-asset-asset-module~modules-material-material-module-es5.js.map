{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js"],"names":["throwNullPortalError","Error","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","host","ngDevMode","hasAttached","_attachedHost","attach","detach","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","template","context","templateRef","elementRef","undefined","DomPortal","element","nativeElement","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","fn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","_document","parentNode","anchorNode","createComment","insertBefore","appendChild","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","length","setDisposeFn","destroy","create","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","forEach","rootNode","detectChanges","index","indexOf","remove","removeChild","DomPortalHost","CdkPortal","ɵfac","CdkPortal_Factory","t","ɵdir","type","selectors","exportAs","features","ctorParameters","args","selector","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","provide","useExisting","providers","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","emit","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","inputs","outputs","decorators","propDecorators","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","ɵmod","ɵinj","factory","PortalModule_Factory","ngJitMode","declarations","exports","PortalInjector","_parentInjector","_customTokens","token","notFoundValue","value","get","_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","formFieldId_r1","id","ctx_r0","_classList","ariaLabel","_getPanelAriaLabelledby","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","platform","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","inertGroups","SAFARI","_autoActiveFirstOption","reduce","classList","className","_setVisibilityClasses","_keyManager","options","withWrap","change","subscribe","toArray","_setVisibility","unsubscribe","scrollTop","panel","markForCheck","event","labelId","labelExpression","ariaLabelledby","_visibleClass","_hiddenClass","_MatAutocompleteBase_Factory","viewQuery","_MatAutocompleteBase_Query","_t","first","panelWidth","MatAutocomplete","arguments","MatAutocomplete_Factory","ɵMatAutocomplete_BaseFactory","ɵcmp","contentQueries","MatAutocomplete_ContentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","descendants","None","OnPush","_MatAutocompleteOriginBase","_MatAutocompleteOriginBase_Factory","MatAutocompleteOrigin","MatAutocompleteOrigin_Factory","ɵMatAutocompleteOrigin_BaseFactory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","_MatAutocompleteTriggerBase","_element","_overlay","_zone","scrollStrategy","_dir","_formField","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","_closingActionsSubscription","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","selected","deselect","_a","overlayRef","_portal","getLabelId","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setFirstItemActive","setActiveItem","readOnly","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","_MatAutocompleteTriggerBase_Factory","autocompleteDisabled","MatAutocompleteTrigger_Factory","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","imports","listenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","info","subject","result","cssClass","listener","animationName","add","run","isAutofilled","set","unlisten","_info","stopMonitoring","AutofillMonitor_Factory","ɵprov","CdkAutofill","_autofillMonitor","cdkAutofill","monitor","CdkAutofill_Factory","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_textareaElement","_measuringClass","FIREFOX","_minRows","_setMinHeight","_maxRows","_setMaxHeight","resizeToFitContent","reset","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","textareaClone","cloneNode","rows","visibility","border","padding","overflow","clientHeight","force","_cacheTextareaLineHeight","textarea","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","doc","_getDocument","selectionStart","selectionEnd","isStopped","setSelectionRange","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","enabled","TextFieldModule","TextFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","nextUniqueId","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","focused","stateChanges","controlType","autofilled","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","filter","has","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","multiple","_id","_validateType","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","isFocused","readonly","_b","_hideControlPlaceholder","call","_previousPlaceholder","setAttribute","removeAttribute","newValue","validity","badInput","_isNeverEmpty","_isBadInput","selectElement","firstOption","empty","selectedIndex","label","ids","join","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","required","errorState","errorStateMatcher","userAriaDescribedBy","MatInputModule","MatInputModule_Factory","scrollBehaviorSupported","BlockScrollStrategy","_previousHTMLStyles","top","left","_isEnabled","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollWidth","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","stream","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","parentRects","ScrollStrategyOptions","noop","close","config","block","ScrollStrategyOptions_Factory","OverlayConfig","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","offsetX","offsetY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","push","splice","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","overlays","i","_keydownEvents","observers","_isAttached","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_clickListener","slice","_outsidePointerEvents","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","_createContainer","containerClass","oppositePlatformContainers","querySelectorAll","createElement","OverlayContainer_Factory","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","sizeConfig","assign","dir","classes","getDirection","minWidth","maxWidth","enablePointer","pointerEvents","showingClass","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","cssClasses","isAdd","subscription","children","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","_validatePositions","hostElement","_boundingBox","_isInitialRender","_lastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","Element","destination","hasOwnProperty","input","split","units","clientRect","floor","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","overlayContainer","withViewportMargin","withFallbackPosition","onPositionChange","_direction","setDirection","withScrollableContainers","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","OverlayPositionBuilder_Factory","Overlay","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","backdropClick","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_detachOverlay","_buildConfig","attachments","outsidePointerEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","observer","_addGlobalListener","_removeGlobalListener","_","deregister","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","_elementScrolled","register","_applyScrollToOptions","scrollTo","scrollLeft","from","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_changeListener","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_detachedSubject","_renderedRangeSubject","_orientation","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","orientation","_calculateSpacerSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","size","range","onContentRendered","to","isHorizontal","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","measureRangeSize","viewportEl","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","CdkVirtualScrollViewport_Query","CdkVirtualScrollViewport_HostBindings","CdkVirtualScrollViewport_Template","getOffset","node","rect","CdkVirtualForOf","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","prev","cur","_changeDataSource","_differ","_needsUpdate","_data","_onRenderedDataChange","_cdkVirtualForOf","Array","_cdkVirtualForTrackBy","item","viewCacheSize","renderedStartIndex","rangeLen","firstNode","lastNode","view","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","disconnect","connect","count","_updateComputedContextProperties","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","forEachIdentityChange","$implicit","last","even","odd","cdkVirtualForOf","CdkVirtualForOf_Factory","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","useClass","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory"],"mappings":"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","file":"default~modules-asset-asset-module~modules-material-material-module-es5.js","sourcesContent":["import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn((() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { Platform, _getShadowRoot } from '@angular/cdk/platform';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/cdk/scrolling';\nimport * as ɵngcc6 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const formFieldId_r1 = ctx.id;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0._getPanelAriaLabelledby(formFieldId_r1));\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = (platform === null || platform === void 0 ? void 0 : platform.SAFARI) || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] },\n    { type: Platform }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc1.Platform }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 4, \"ng-template\");\n    } }, directives: [ɵngcc2.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 12.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 12.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, { id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a.getLabelId() });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc3.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc5.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState && !ctx.empty)(\"aria-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    // Only mark the input as invalid for assistive technology if it has a value since the\n                    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                    '[attr.aria-invalid]': 'errorState && !empty',\n                    '[attr.aria-required]': 'required'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n            MatCommonModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule,\n        MatCommonModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, Optional, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) { return new (t || BaseOverlayDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBaseOverlayDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function BaseOverlayDispatcher_Factory() { return new BaseOverlayDispatcher(ɵɵinject(DOCUMENT)); }, token: BaseOverlayDispatcher, providedIn: \"root\" });\nBaseOverlayDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            // Get the target through the `composedPath` if possible to account for shadow DOM.\n            const target = event.composedPath ? event.composedPath()[0] : event.target;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) { return new (t || OverlayOutsideClickDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayOutsideClickDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayOutsideClickDispatcher_Factory() { return new OverlayOutsideClickDispatcher(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayOutsideClickDispatcher, providedIn: \"root\" });\nOverlayOutsideClickDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(window.__karma__ || window.jasmine);\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        if (this._platform.isBrowser || isTestEnvironment) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height)\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n        this.onPositionChange = this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location), ɵngcc0.ɵɵinject(OverlayOutsideClickDispatcher)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location },\n    { type: OverlayOutsideClickDispatcher }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location }, { type: OverlayOutsideClickDispatcher }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() { return this._offsetX; }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() { return this._offsetY; }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() { return this._lockPosition; }\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() { return this._growAfterOpen; }\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() { return this._push; }\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    disableClose: [{ type: Input, args: ['cdkConnectedOverlayDisableClose',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    overlayOutsideClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], disableClose: [{\n            type: Input,\n            args: ['cdkConnectedOverlayDisableClose']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], overlayOutsideClick: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nFullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_a, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_c, BaseOverlayDispatcher as ɵangular_material_src_cdk_overlay_overlay_d };\n\n//# sourceMappingURL=overlay.js.map","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/cdk/collections';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = (this._itemSize > 0) ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() { return this._itemSize; }\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // We don't need to keep track of the subscription,\n            // because we complete the `change` stream on destroy.\n            this.change().subscribe(() => this._updateViewportSize());\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n            undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode ?\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), (record) => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: _RecycleViewRepeaterStrategy, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc3._RecycleViewRepeaterStrategy, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }], cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map"]}