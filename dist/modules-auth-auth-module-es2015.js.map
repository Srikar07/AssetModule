{"version":3,"sources":["./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/registration/registration.component.ts","./src/app/modules/auth/registration/registration.component.html","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/logout/logout.component.ts","./src/app/modules/auth/logout/logout.component.html","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/auth/forgot-password/forgot-password.component.ts","./src/app/modules/auth/forgot-password/forgot-password.component.html","./src/app/modules/auth/auth-routing.module.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthComponent } from './auth.component';\nimport {TranslationModule} from '../i18n/translation.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegistrationComponent,\n    ForgotPasswordComponent,\n    LogoutComponent,\n    AuthComponent,\n  ],\n  imports: [\n    CommonModule,\n    TranslationModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ]\n})\nexport class AuthModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\nimport { UserModel } from '../_models/user.model';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss'],\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n  registrationForm: FormGroup;\n  hasError: boolean;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registrationForm.controls;\n  }\n\n  initForm() {\n    this.registrationForm = this.fb.group(\n      {\n        fullname: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(100),\n          ]),\n        ],\n        email: [\n          'qwe@qwe.qwe',\n          Validators.compose([\n            Validators.required,\n            Validators.email,\n            Validators.minLength(3),\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n          ]),\n        ],\n        password: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(100),\n          ]),\n        ],\n        cPassword: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(100),\n          ]),\n        ],\n        agree: [false, Validators.compose([Validators.required])],\n      },\n      {\n        validator: ConfirmPasswordValidator.MatchPassword,\n      }\n    );\n  }\n\n  submit() {\n    this.hasError = false;\n    const result = {};\n    Object.keys(this.f).forEach(key => {\n      result[key] = this.f[key].value;\n    });\n    const newUser = new UserModel();\n    newUser.setUser(result);\n    const registrationSubscr = this.authService\n      .registration(newUser)\n      .pipe(first())\n      .subscribe((user: UserModel) => {\n        if (user) {\n          this.router.navigate(['/']);\n        } else {\n          this.hasError = true;\n        }\n      });\n    this.unsubscribe.push(registrationSubscr);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\n  }\n}\n","<!--begin::Signup-->\n<div class=\"login-form login-signup\">\n  <!--begin::Form-->\n  <form\n    class=\"form\"\n    novalidate=\"novalidate\"\n    id=\"kt_login_signup_form\"\n    [formGroup]=\"registrationForm\"\n    (ngSubmit)=\"submit()\"\n  >\n    <!--begin::Title-->\n    <div class=\"pb-13 pt-lg-0 pt-5\">\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\n        Sign Up\n      </h3>\n      <p class=\"text-muted font-weight-bold font-size-h4\">\n        Enter your details to create your account\n      </p>\n    </div>\n    <!--end::Title-->\n\n    <!-- begin::Alert error-->\n    <ng-container *ngIf=\"hasError\">\n      <div\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\n      >\n        <div class=\"alert-text\">The registration details are incorrect</div>\n      </div>\n    </ng-container>\n    <!-- end::Alert error-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Fullname</label>\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"text\"\n        name=\"fullname\"\n        formControlName=\"fullname\"\n        placeholder=\"Fullname\"\n        autocomplete=\"off\"\n        [ngClass]=\"{\n          'is-invalid': registrationForm.controls['fullname'].invalid\n        }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Fullname is required',\n          control: registrationForm.controls['fullname']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Fullname should have at least 3 symbols',\n          control: registrationForm.controls['fullname']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Fullname should have maximum 100 symbols',\n          control: registrationForm.controls['fullname']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        formControlName=\"email\"\n        autocomplete=\"off\"\n        [ngClass]=\"{ 'is-invalid': registrationForm.controls['email'].invalid }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Email is required',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'email',\n          message: 'Email is invalid',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Email should have at least 3 symbols',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Email should have maximum 360 symbols',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\n        >Password</label\n      >\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"password\"\n        placeholder=\"Password\"\n        name=\"password\"\n        formControlName=\"password\"\n        autocomplete=\"off\"\n        [ngClass]=\"{\n          'is-invalid': registrationForm.controls['password'].invalid\n        }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Password is required',\n          control: registrationForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Password should have at least 3 symbols',\n          control: registrationForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Password should have maximum 100 symbols',\n          control: registrationForm.controls['password']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\n        >Confirm Password</label\n      >\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"password\"\n        placeholder=\"Confirm password\"\n        name=\"cPassword\"\n        autocomplete=\"off\"\n        formControlName=\"cPassword\"\n        [ngClass]=\"{\n          'is-invalid': registrationForm.controls['cPassword'].invalid\n        }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Confirm Password is required',\n          control: registrationForm.controls['cPassword']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Confirm Password should have at least 3 symbols',\n          control: registrationForm.controls['cPassword']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Confirm Password should have maximum 100 symbols',\n          control: registrationForm.controls['cPassword']\n        }\"\n      ></ng-container>\n      <ng-container\n        *ngIf=\"\n          registrationForm.controls['cPassword'].errors &&\n          registrationForm.controls['cPassword'].errors.ConfirmPassword\n        \"\n      >\n        <div class=\"fv-plugins-message-container\">\n          <div class=\"fv-help-block\">\n            'Passsword' and 'Confirm Password' didn't match.\n          </div>\n        </div>\n      </ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"checkbox mb-0\">\n        <input type=\"checkbox\" formControlName=\"agree\" name=\"agree\" />&nbsp;I\n        Agree the&nbsp;<a\n          href=\"https://keenthemes.com/metronic/?page=faq\"\n          target=\"_blank\"\n          >terms and conditions</a\n        >.&nbsp;\n        <span></span>\n      </label>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group d-flex flex-wrap pb-lg-0 pb-3\">\n      <button\n        type=\"submit\"\n        id=\"kt_login_signup_submit\"\n        [disabled]=\"\n          registrationForm.invalid || !registrationForm.controls['agree'].value\n        \"\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\n      >\n        Submit\n      </button>\n      <a\n        routerLink=\"/auth/login\"\n        type=\"button\"\n        id=\"kt_login_signup_cancel\"\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\n      >\n        Cancel\n      </a>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n    </div>\n    <!--end::Form group-->\n  </form>\n  <!--end::Form-->\n</div>\n<!--end::Signup-->\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        {{ message }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { UserModel } from '../_models/user.model';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  // KeenThemes mock, change it to:\n  // defaultAuth = {\n  //   email: '',\n  //   password: '',\n  // };\n  defaultAuth: any = {\n    email: 'admin@demo.com',\n    password: 'demo',\n  };\n  loginForm: FormGroup;\n  hasError: boolean;\n  returnUrl: string;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    // get return url from route parameters or default to '/'\n    this.returnUrl =\n        this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n    }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      email: [\n        this.defaultAuth.email,\n        Validators.compose([\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ]),\n      ],\n      password: [\n        this.defaultAuth.password,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ]),\n      ],\n    });\n  }\n\n  submit() {\n    this.hasError = false;\n    const loginSubscr = this.authService\n      .login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe((user: UserModel) => {\n        if (user) {\n          this.router.navigate([this.  returnUrl]);\n        } else {\n          this.hasError = true;\n        }\n      });\n    this.unsubscribe.push(loginSubscr);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\n  }\n}\n","<!--begin::Signin-->\n<div class=\"login-form login-signin\">\n  <!--begin::Form-->\n  <form\n    class=\"form\"\n    [formGroup]=\"loginForm\"\n    novalidate=\"novalidate\"\n    id=\"kt_login_signin_form\"\n    (ngSubmit)=\"submit()\"\n  >\n    <!--begin::Title-->\n    <div class=\"pb-13 pt-lg-0 pt-5\">\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\n        Welcome to Metronic\n      </h3>\n      <span class=\"text-muted font-weight-bold font-size-h4\"\n        >New Here?\n        <a\n          routerLink=\"/auth/registration\"\n          id=\"kt_login_signup\"\n          class=\"text-primary font-weight-bolder\"\n          >{{ \"AUTH.GENERAL.SIGNUP_BUTTON\" | translate }}</a\n        >\n      </span>\n    </div>\n    <!--end::Title-->\n\n    <!-- begin::Alert info-->\n    <ng-container *ngIf=\"!hasError\">\n      <div class=\"mb-10 alert alert-custom alert-light-info alert-dismissible\">\n        <div class=\"alert-text\">\n          Use account <strong>{{ defaultAuth.email }}</strong> and password\n          <strong>{{ defaultAuth.password }}</strong> to continue.\n        </div>\n      </div>\n    </ng-container>\n    <!-- end::Alert info-->\n\n    <!-- begin::Alert error-->\n    <ng-container *ngIf=\"hasError\">\n      <div\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\n      >\n        <div class=\"alert-text\">The login details are incorrect</div>\n      </div>\n    </ng-container>\n    <!-- end::Alert error-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\n        type=\"email\"\n        name=\"email\"\n        formControlName=\"email\"\n        autocomplete=\"off\"\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['email'].invalid }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Email is required',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>      \n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'email',\n          message: 'Email is invalid',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minLength',\n          message: 'Email should have at least 3 symbols',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Email should have maximum 360 symbols',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <div class=\"d-flex justify-content-between mt-n5\">\n        <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\n          >Password</label\n        >\n        <a\n          routerLink=\"/auth/forgot-password\"\n          class=\"text-primary font-size-h6 font-weight-bolder text-hover-primary pt-5\"\n          id=\"kt_login_forgot\"\n        >\n          Forgot Password ?\n        </a>\n      </div>\n\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\n        type=\"password\"\n        name=\"password\"\n        autocomplete=\"off\"\n        formControlName=\"password\"\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['password'].invalid }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Password is required',\n          control: loginForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Password should have at least 3 symbols',\n          control: loginForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Password should have maximum 100 symbols',\n          control: loginForm.controls['password']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Action-->\n    <div class=\"pb-lg-0 pb-5\">\n      <button\n        type=\"submit\"\n        id=\"kt_login_signin_submit\"\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\"\n        [disabled]=\"loginForm.invalid\"\n      >\n        Sign In\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-light-primary font-weight-bolder px-8 py-4 my-3 font-size-lg\"\n      >\n        <span class=\"svg-icon svg-icon-md\">\n          <img src=\"./assets/media/svg/social-icons/google.svg\" />\n        </span>\n        Sign in with Google\n      </button>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n    </div>\n    <!--end::Action-->\n  </form>\n  <!--end::Form-->\n</div>\n<!--end::Signin-->\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        {{ message }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n\n  ngOnInit(): void {}\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  today: Date = new Date();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex flex-column flex-root h-100\" id=\"kt_login_wrapper\">\n  <!--begin::Login-->\n  <div class=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\" id=\"kt_login\">\n    <!--begin::Aside-->\n    <div class=\"login-aside d-flex flex-column flex-row-auto\" style=\"background-color: #F2C98A;\">\n      <!--begin::Aside Top-->\n      <div class=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\n        <!--begin::Aside header-->\n        <a href=\"#\" class=\"text-center mb-10\">\n          <img src=\"./assets/media/logos/logo-letter-1.png\" class=\"max-h-70px\" alt=\"\" />\n        </a>\n        <!--end::Aside header-->\n\n        <!--begin::Aside title-->\n        <h3 class=\"font-weight-bolder text-center font-size-h4 font-size-h1-lg\" style=\"color: #986923;\">\n          Discover Amazing Metronic<br />\n          with great build tools\n        </h3>\n        <!--end::Aside title-->\n      </div>\n      <!--end::Aside Top-->\n\n      <!--begin::Aside Bottom-->\n      <div class=\"aside-img d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\"\n        style=\"background-image: url('./assets/media/svg/illustrations/login-visual-1.svg')\"></div>\n      <!--end::Aside Bottom-->\n    </div>\n    <!--begin::Aside-->\n\n    <!--begin::Content-->\n    <div\n      class=\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\">\n      <!--begin::Content body-->\n      <div class=\"d-flex flex-column-fluid flex-center\">\n        <router-outlet></router-outlet>\n      </div>\n      <!--end::Content body-->\n\n      <!--begin::Content footer-->\n      <div class=\"d-flex justify-content-lg-start justify-content-center align-items-end py-7 py-lg-0\">\n        <a href=\"#\" class=\"text-primary font-weight-bolder font-size-h5\">Terms</a>\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Plans</a>\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Contact Us</a>\n      </div>\n      <!--end::Content footer-->\n    </div>\n    <!--end::Content-->\n  </div>\n  <!--end::Login-->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { first } from 'rxjs/operators';\n\nenum ErrorStates {\n  NotSubmitted,\n  HasError,\n  NoError,\n}\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\n  errorStates = ErrorStates;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.forgotPasswordForm.controls;\n  }\n\n  initForm() {\n    this.forgotPasswordForm = this.fb.group({\n      email: [\n        'admin@demo.com',\n        Validators.compose([\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ]),\n      ],\n    });\n  }\n\n  submit() {\n    this.errorState = ErrorStates.NotSubmitted;\n    const forgotPasswordSubscr = this.authService\n      .forgotPassword(this.f.email.value)\n      .pipe(first())\n      .subscribe((result: boolean) => {\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\n      });\n    this.unsubscribe.push(forgotPasswordSubscr);\n  }\n}\n","<div class=\"login-form login-forgot\">\n  <!--begin::Form-->\n  <form\n    class=\"form fv-plugins-bootstrap fv-plugins-framework\"\n    novalidate=\"novalidate\"\n    [formGroup]=\"forgotPasswordForm\"\n    (ngSubmit)=\"submit()\"\n    id=\"kt_login_forgot_form\"\n    [ngStyle]=\"{\n      display: errorState === errorStates.NoError ? 'none' : 'block'\n    }\"\n  >\n    <!--begin::Title-->\n    <div class=\"pb-13 pt-lg-0 pt-5\">\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\n        Forgotten Password ?\n      </h3>\n      <p class=\"text-muted font-weight-bold font-size-h4\">\n        Enter your email to reset your password\n      </p>\n    </div>\n    <!--end::Title-->\n\n    <!-- begin::Alert error-->\n    <ng-container *ngIf=\"errorState === errorStates.HasError\">\n      <div\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\n      >\n        <div class=\"alert-text\">The email detail is incorrect</div>\n      </div>\n    </ng-container>\n    <!-- end::Alert error-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group fv-plugins-icon-container has-danger\">\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"email\"\n        formControlName=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        autocomplete=\"off\"\n        [ngClass]=\"{\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\n        }\"\n      />\n\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Email is required',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'email',\n          message: 'Email is invalid',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minLength',\n          message: 'Email should have at least 3 symbols',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Email should have maximum 360 symbols',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n    <!--begin::Form group-->\n    <div class=\"form-group d-flex flex-wrap pb-lg-0\">\n      <button\n        type=\"submit\"\n        id=\"kt_login_forgot_submit\"\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\n      >\n        Submit\n      </button>\n      <a\n        routerLink=\"/auth/login\"\n        id=\"kt_login_forgot_cancel\"\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\n      >\n        Cancel\n      </a>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n    </div>\n    <!--end::Form group-->\n    <div></div>\n  </form>\n  <!--end::Form-->\n\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\n    <div\n      class=\"card card-custom bgi-no-repeat gutter-b\"\n      style=\"\n        height: 175px;\n        background-color: #4ab58e;\n        background-position: calc(100% + 1rem) bottom;\n        background-size: 25% auto;\n        background-image: url(assets/media/svg/humans/custom-1.svg);\n      \"\n    >\n      <!--begin::Body-->\n      <div class=\"card-body d-flex align-items-center\">\n        <div class=\"py-2\">\n          <h3 class=\"text-white font-weight-bolder mb-3\">Email is correct!</h3>\n          <p class=\"text-white font-size-lg\">\n            Message with 'recovery' instruction<br />\n            has been sent<br />\n          </p>\n          <a\n            routerLink=\"/auth/login\"\n            class=\"swal2-confirm btn font-weight-bold btn-light-primary\"\n          >\n            Ok, got it!\n          </a>\n        </div>\n      </div>\n      <!--end::Body-->\n    </div>\n  </ng-container>\n</div>\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        {{ message }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AuthComponent} from './auth.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\nimport {LogoutComponent} from './logout/logout.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n        data: {returnUrl: window.location.pathname}\n      },\n      {\n        path: 'registration',\n        component: RegistrationComponent\n      },\n      {\n        path: 'forgot-password',\n        component: ForgotPasswordComponent\n      },\n      {\n        path: 'logout',\n        component: LogoutComponent\n      },\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\n      {path: '**', redirectTo: 'login', pathMatch: 'full'},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AuthRoutingModule {}\n"],"sourceRoot":"webpack:///"}