{"version":3,"sources":["./src/app/modules/e-commerce/e-commerce-routing.module.ts","./src/app/modules/e-commerce/e-commerce.module.ts","./src/app/modules/e-commerce/products/products.component.ts","./src/app/modules/e-commerce/products/products.component.html","./src/app/modules/e-commerce/products/components/fetch-products-modal/fetch-products-modal.component.ts","./src/app/modules/e-commerce/products/components/fetch-products-modal/fetch-products-modal.component.html","./src/app/modules/e-commerce/products/components/update-products-status-modal/update-products-status-modal.component.ts","./src/app/modules/e-commerce/products/components/update-products-status-modal/update-products-status-modal.component.html","./src/app/modules/e-commerce/products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component.html","./src/app/modules/e-commerce/customers/components/delete-customers-modal/delete-customers-modal.component.ts","./src/app/modules/e-commerce/customers/components/delete-customers-modal/delete-customers-modal.component.html","./src/app/modules/e-commerce/customers/customers.component.ts","./src/app/modules/e-commerce/customers/customers.component.html","./src/app/modules/e-commerce/e-commerce.component.ts","./src/app/modules/e-commerce/e-commerce.component.html","./src/app/modules/e-commerce/customers/components/delete-customer-modal/delete-customer-modal.component.ts","./src/app/modules/e-commerce/customers/components/delete-customer-modal/delete-customer-modal.component.html","./src/app/modules/e-commerce/_services/fake/customers.service.ts","./src/app/modules/e-commerce/products/components/delete-product-modal/delete-product-modal.component.ts","./src/app/modules/e-commerce/products/components/delete-product-modal/delete-product-modal.component.html","./src/app/modules/e-commerce/products/product-edit/remarks/remarks.component.ts","./src/app/modules/e-commerce/products/product-edit/remarks/remarks.component.html","./src/app/modules/e-commerce/products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component.html","./src/app/modules/e-commerce/products/product-edit/product-edit.component.ts","./src/app/modules/e-commerce/products/product-edit/product-edit.component.html","./src/app/modules/e-commerce/products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component.html","./src/app/modules/e-commerce/products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component.html","./src/app/modules/e-commerce/products/product-edit/specifications/specifications.component.ts","./src/app/modules/e-commerce/products/product-edit/specifications/specifications.component.html","./src/app/modules/e-commerce/products/components/delete-products-modal/delete-products-modal.component.ts","./src/app/modules/e-commerce/products/components/delete-products-modal/delete-products-modal.component.html","./src/app/modules/e-commerce/products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component.html","./src/app/modules/e-commerce/customers/components/edit-customer-modal/edit-customer-modal.component.ts","./src/app/modules/e-commerce/customers/components/edit-customer-modal/edit-customer-modal.component.html","./src/app/modules/e-commerce/products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component.html","./src/app/modules/e-commerce/products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component.html","./src/app/modules/e-commerce/_services/fake/remarks.service.ts","./src/app/modules/e-commerce/_services/index.ts","./src/app/modules/e-commerce/_models/specification.dictionary.ts","./src/app/modules/e-commerce/_services/fake/products.service.ts","./src/app/modules/e-commerce/customers/components/update-customers-status-modal/update-customers-status-modal.component.ts","./src/app/modules/e-commerce/customers/components/update-customers-status-modal/update-customers-status-modal.component.html","./src/app/modules/e-commerce/_services/fake/specifications.service.ts","./src/app/modules/e-commerce/customers/components/fetch-customers-modal/fetch-customers-modal.component.ts","./src/app/modules/e-commerce/customers/components/fetch-customers-modal/fetch-customers-modal.component.html","./src/app/modules/e-commerce/products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component.ts","./src/app/modules/e-commerce/products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component.html"],"names":[],"mappings":"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","file":"modules-e-commerce-e-commerce-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ECommerceComponent } from './e-commerce.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ECommerceComponent,\n    children: [\n      {\n        path: 'customers',\n        component: CustomersComponent,\n      },\n      {\n        path: 'products',\n        component: ProductsComponent,\n      },\n      {\n        path: 'product/add',\n        component: ProductEditComponent\n      },\n      {\n        path: 'product/edit',\n        component: ProductEditComponent\n      },\n      {\n        path: 'product/edit/:id',\n        component: ProductEditComponent\n      },\n      { path: '', redirectTo: 'customers', pathMatch: 'full' },\n      { path: '**', redirectTo: 'customers', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ECommerceRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CustomersComponent } from './customers/customers.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ECommerceComponent } from './e-commerce.component';\nimport { ECommerceRoutingModule } from './e-commerce-routing.module';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeleteCustomerModalComponent } from './customers/components/delete-customer-modal/delete-customer-modal.component';\nimport { DeleteCustomersModalComponent } from './customers/components/delete-customers-modal/delete-customers-modal.component';\nimport { FetchCustomersModalComponent } from './customers/components/fetch-customers-modal/fetch-customers-modal.component';\nimport { UpdateCustomersStatusModalComponent } from './customers/components/update-customers-status-modal/update-customers-status-modal.component';\nimport { EditCustomerModalComponent } from './customers/components/edit-customer-modal/edit-customer-modal.component';\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteProductModalComponent } from './products/components/delete-product-modal/delete-product-modal.component';\nimport { DeleteProductsModalComponent } from './products/components/delete-products-modal/delete-products-modal.component';\nimport { UpdateProductsStatusModalComponent } from './products/components/update-products-status-modal/update-products-status-modal.component';\nimport { FetchProductsModalComponent } from './products/components/fetch-products-modal/fetch-products-modal.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\nimport { RemarksComponent } from './products/product-edit/remarks/remarks.component';\nimport { SpecificationsComponent } from './products/product-edit/specifications/specifications.component';\nimport { DeleteRemarkModalComponent } from './products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component';\nimport { DeleteRemarksModalComponent } from './products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component';\nimport { FetchRemarksModalComponent } from './products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component';\nimport { DeleteSpecModalComponent } from './products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component';\nimport { DeleteSpecsModalComponent } from './products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component';\nimport { FetchSpecsModalComponent } from './products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component';\nimport { EditRemarkModalComponent } from './products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component';\nimport { EditSpecModalComponent } from './products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component';\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    ProductsComponent,\n    ECommerceComponent,\n    DeleteCustomerModalComponent,\n    DeleteCustomersModalComponent,\n    FetchCustomersModalComponent,\n    UpdateCustomersStatusModalComponent,\n    EditCustomerModalComponent,\n    DeleteProductModalComponent,\n    DeleteProductsModalComponent,\n    UpdateProductsStatusModalComponent,\n    FetchProductsModalComponent,\n    ProductEditComponent,\n    RemarksComponent,\n    SpecificationsComponent,\n    DeleteRemarkModalComponent,\n    DeleteRemarksModalComponent,\n    FetchRemarksModalComponent,\n    DeleteSpecModalComponent,\n    DeleteSpecsModalComponent,\n    FetchSpecsModalComponent,\n    EditRemarkModalComponent,\n    EditSpecModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ECommerceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbModalModule,\n    NgbDatepickerModule\n  ],\n  entryComponents: [\n    DeleteCustomerModalComponent,\n    DeleteCustomersModalComponent,\n    UpdateCustomersStatusModalComponent,\n    FetchCustomersModalComponent,\n    EditCustomerModalComponent,\n    DeleteProductModalComponent,\n    DeleteProductsModalComponent,\n    UpdateProductsStatusModalComponent,\n    FetchProductsModalComponent,\n    DeleteRemarkModalComponent,\n    DeleteRemarksModalComponent,\n    FetchRemarksModalComponent,\n    DeleteSpecModalComponent,\n    DeleteSpecsModalComponent,\n    FetchSpecsModalComponent,\n    EditRemarkModalComponent,\n    EditSpecModalComponent\n  ]\n})\nexport class ECommerceModule {}\n","// tslint:disable:no-string-literal\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ProductsService } from '../_services';\nimport {\n  GroupingState,\n  PaginatorState,\n  SortState,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n} from '../../../_metronic/shared/crud-table';\nimport { DeleteProductModalComponent } from './components/delete-product-modal/delete-product-modal.component';\nimport { DeleteProductsModalComponent } from './components/delete-products-modal/delete-products-modal.component';\nimport { UpdateProductsStatusModalComponent } from './components/update-products-status-modal/update-products-status-modal.component';\nimport { FetchProductsModalComponent } from './components/fetch-products-modal/fetch-products-modal.component';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent\n  implements\n  OnInit,\n  OnDestroy,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n  IFilterView {\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  filterGroup: FormGroup;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public productsService: ProductsService\n  ) { }\n\n  // angular lifecircle hooks\n  ngOnInit(): void {\n    this.filterForm();\n    this.searchForm();\n    this.productsService.fetch();\n    const sb = this.productsService.isLoading$.subscribe(res => this.isLoading = res);\n    this.subscriptions.push(sb);\n    this.grouping = this.productsService.grouping;\n    this.paginator = this.productsService.paginator;\n    this.sorting = this.productsService.sorting;\n    this.productsService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n\n  // filtration\n  filterForm() {\n    this.filterGroup = this.fb.group({\n      status: [''],\n      condition: [''],\n      searchTerm: [''],\n    });\n    this.subscriptions.push(\n      this.filterGroup.controls.status.valueChanges.subscribe(() =>\n        this.filter()\n      )\n    );\n    this.subscriptions.push(\n      this.filterGroup.controls.condition.valueChanges.subscribe(() => this.filter())\n    );\n  }\n\n  filter() {\n    const filter = {};\n    const status = this.filterGroup.get('status').value;\n    if (status) {\n      filter['status'] = status;\n    }\n\n    const condition = this.filterGroup.get('condition').value;\n    if (condition) {\n      filter['condition'] = condition;\n    }\n    this.productsService.patchState({ filter });\n  }\n\n  // search\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\n  */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n    this.productsService.patchState({ searchTerm });\n  }\n\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.productsService.patchState({ sorting });\n  }\n\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.productsService.patchState({ paginator });\n  }\n  // actions\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteProductModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteProductsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n\n  updateStatusForSelected() {\n    const modalRef = this.modalService.open(\n      UpdateProductsStatusModalComponent\n    );\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchProductsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\">Products list</h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <a\n        type=\"button\"\n        class=\"btn btn-primary\"\n        routerLink=\"/ecommerce/product/add\"\n        >New Product</a\n      >\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <!-- begin: Filtration form -->\n    <div class=\"form form-label-right\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-4\">\n          <div class=\"row\" [formGroup]=\"filterGroup\">\n            <div class=\"col-lg-6\">\n              <select\n                class=\"form-control\"\n                name=\"status\"\n                placeholder=\"Filter by Status\"\n                formControlName=\"status\"\n              >\n                <option value=\"\">All</option>\n                <option value=\"1\">Selling</option>\n                <option value=\"2\">Sold</option></select\n              ><small class=\"form-text text-muted\"\n                ><b>Filter</b> by Status</small\n              >\n            </div>\n            <div class=\"col-lg-6\">\n              <select\n                class=\"form-control\"\n                placeholder=\"Filter by Contition\"\n                name=\"condition\"\n                formControlName=\"condition\"\n              >\n                <option value=\"\">All</option>\n                <option value=\"1\">New</option>\n                <option value=\"2\">Used</option></select\n              ><small class=\"form-text text-muted\"\n                ><b>Filter</b> by Condition</small\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-2\" [formGroup]=\"searchGroup\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"searchText\"\n            placeholder=\"Search\"\n            value=\"\"\n            formControlName=\"searchTerm\"\n          /><small class=\"form-text text-muted\"\n            ><b>Search</b> in all fields</small\n          >\n        </div>\n      </div>\n    </div>\n    <!-- end: Filtration form -->\n\n    <!-- begin: Grouping -->\n    <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n      <div class=\"form\">\n        <div\n          class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\"\n        >\n          <div class=\"col-xl-12\">\n            <div class=\"form-group form-group-inline\">\n              <div class=\"form-label form-label-no-wrap\">\n                <label class=\"font-bold font-danger\"\n                  ><span\n                    >Selected records count:\n                    <b>{{ grouping.getSelectedRowsCount() }}</b></span\n                  ></label\n                >\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"deleteSelected()\"\n                >\n                  <i class=\"fa fa-trash\"></i> Delete All</button\n                >&nbsp;\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"fetchSelected()\"\n                >\n                  <i class=\"fa fa-stream\"></i> Fetch Selected</button\n                >&nbsp;\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                  (click)=\"updateStatusForSelected()\"\n                >\n                  <i class=\"fa fa-sync-alt\"></i> Update Status\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <!-- end: Grouping -->\n    <!-- begin:Table -->\n    <div class=\"table-responsive angular-bootstrap-table\">\n      <table\n        class=\"table table-head-custom table-vertical-center overflow-hidden\"\n      >\n        <thead>\n          <th class=\"selection-cell-header\" data-row-selection=\"true\">\n            <label class=\"checkbox checkbox-single\"\n              ><input\n                type=\"checkbox\"\n                (click)=\"grouping.selectAllRows()\"\n                [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span\n            ></label>\n          </th>\n          <th>\n            VIN CODE (ID)\n            <app-sort-icon\n              column=\"VINCode\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            MANUFACTURE\n            <app-sort-icon\n              column=\"manufacture\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            MODEL\n            <app-sort-icon\n              column=\"model\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            YEAR\n            <app-sort-icon\n              column=\"modelYear\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            COLOR\n            <app-sort-icon\n              column=\"color\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            PRICE\n            <app-sort-icon\n              column=\"price\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            STATUS\n            <app-sort-icon\n              column=\"status\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            CONDITION\n            <app-sort-icon\n              column=\"condition\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>ACTIONS</th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let product of productsService.items$ | async\">\n            <td class=\"selection-cell\">\n              <label class=\"checkbox checkbox-single\"\n                ><input\n                  type=\"checkbox\"\n                  (click)=\"grouping.selectRow(product.id)\"\n                  [checked]=\"grouping.isRowSelected(product.id)\"\n                />\n                <span></span>\n              </label>\n            </td>\n            <td>{{ product.VINCode }}</td>\n            <td>{{ product.manufacture }}</td>\n            <td>{{ product.model }}</td>\n            <td>{{ product.modelYear }}</td>\n            <td>\n              <span [style.color]=\"product.color\">{{ product.color }}</span>\n            </td>\n            <td>$ {{ product.price }}</td>\n            <td>\n              <span\n                class=\"label label-lg label-inline\"\n                [class.label-light-success]=\"product.status === 1\"\n                [class.label-light-primary]=\"product.status === 2\"\n              >\n                <ng-container *ngIf=\"product.status === 1\"\n                  >Selling</ng-container\n                >\n                <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\n              </span>\n            </td>\n            <td>\n              <ng-container *ngIf=\"product.condition === 1\">NEW</ng-container>\n              <ng-container *ngIf=\"product.condition === 2\">USED</ng-container>\n            </td>\n            <td>\n              <a\n                title=\"Edit product\"\n                class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n                [routerLink]=\"'/ecommerce/product/edit/' + product.id\"\n              >\n                <span\n                  [inlineSVG]=\"\n                    './assets/media/svg/icons/Communication/Write.svg'\n                  \"\n                  cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-primary\"\n                >\n                </span>\n              </a>\n              <a\n                title=\"Delete product\"\n                class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                (click)=\"delete(product.id)\"\n              >\n                <span\n                  [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\n                  cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-danger\"\n                >\n                </span>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- end: Table -->\n    <app-paginator\n      class=\"d-flex justify-content-between align-items-center flex-wrap\"\n      [paginator]=\"paginator\"\n      [isLoading]=\"isLoading\"\n      (paginate)=\"paginate($event)\"\n    ></app-paginator>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { from, of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { Product } from '../../../_models/product.model';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-fetch-products-modal',\n  templateUrl: './fetch-products-modal.component.html',\n  styleUrls: ['./fetch-products-modal.component.scss']\n})\nexport class FetchProductsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  products: Product[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  loadProducts() {\n    const sb = this.productsService.items$.pipe(\n      first()\n    ).subscribe((res: Product[]) => {\n      this.products = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    const sb = from([]).pipe( // fake => update to call request method from your server\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => {}),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(errorMessage);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n        if (this.modal) {\n          this.modal.close();\n        }\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected products</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>VIN CODE</th>\n        <th>MANUFACTURE</th>\n        <th>MODEL</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products\">\n          <td>{{product.VINCode}}</td>\n          <td>{{product.manufacture}}</td>\n          <td>{{product.model}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" \n              [class.label-light-success]=\"product.status === 1\"\n              [class.label-light-primary]=\"product.status === 2\"\n            >\n              <ng-container *ngIf=\"product.status === 1\">Selling</ng-container>\n              <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { Product } from '../../../_models/product.model';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-update-products-status-modal',\n  templateUrl: './update-products-status-modal.component.html',\n  styleUrls: ['./update-products-status-modal.component.scss']\n})\nexport class UpdateProductsStatusModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  status = 2;\n  products: Product[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  loadProducts() {\n    const sb = this.productsService.items$.pipe(\n      first()\n    ).subscribe((res: Product[]) => {\n      this.products = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  updateProductsStatus() {\n    this.isLoading = true;\n    const sb = this.productsService.updateStatusForItems(this.ids, +this.status).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Status update for selected products</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>VIN CODE</th>\n        <th>MANUFACTURE</th>\n        <th>MODEL</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products\">\n          <td>{{product.VINCode}}</td>\n          <td>{{product.manufacture}}</td>\n          <td>{{product.model}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" [class.label-light-success]=\"product.status === 1\"\n              [class.label-light-primary]=\"product.status === 2\">\n              <ng-container *ngIf=\"product.status === 1\">Selling</ng-container>\n              <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"form modal-footer\">\n  <div class=\"form-group mr-2\">\n    <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\n      <option value=\"1\">Selling</option>\n      <option value=\"2\">Sold</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"updateProductsStatus()\">Update Status</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { SpecificationsService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-spec-modal',\n  templateUrl: './delete-spec-modal.component.html',\n  styleUrls: ['./delete-spec-modal.component.scss']\n})\nexport class DeleteSpecModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSpec() {\n    this.isLoading = true;\n    const sb = this.specsService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Specification Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Specification is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this specification?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteSpec()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-customers-modal',\n  templateUrl: './delete-customers-modal.component.html',\n  styleUrls: ['./delete-customers-modal.component.scss']\n})\nexport class DeleteCustomersModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteCustomers() {\n    this.isLoading = true;\n    const sb = this.customersService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Customers Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Customers are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected customers?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteCustomers()\">\n      Delete\n    </button>\n  </div>\n</div>","// tslint:disable:no-string-literal\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomersService } from '../_services';\nimport {\n  GroupingState,\n  PaginatorState,\n  SortState,\n  ICreateAction,\n  IEditAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n} from '../../../_metronic/shared/crud-table';\nimport { DeleteCustomerModalComponent } from './components/delete-customer-modal/delete-customer-modal.component';\nimport { DeleteCustomersModalComponent } from './components/delete-customers-modal/delete-customers-modal.component';\nimport { UpdateCustomersStatusModalComponent } from './components/update-customers-status-modal/update-customers-status-modal.component';\nimport { FetchCustomersModalComponent } from './components/fetch-customers-modal/fetch-customers-modal.component';\nimport { EditCustomerModalComponent } from './components/edit-customer-modal/edit-customer-modal.component';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n})\nexport class CustomersComponent\n  implements\n  OnInit,\n  OnDestroy,\n  ICreateAction,\n  IEditAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n  IFilterView {\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  filterGroup: FormGroup;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public customerService: CustomersService\n  ) { }\n\n  // angular lifecircle hooks\n  ngOnInit(): void {\n    this.filterForm();\n    this.searchForm();\n    this.customerService.fetch();\n    this.grouping = this.customerService.grouping;\n    this.paginator = this.customerService.paginator;\n    this.sorting = this.customerService.sorting;\n    const sb = this.customerService.isLoading$.subscribe(res => this.isLoading = res);\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n\n  // filtration\n  filterForm() {\n    this.filterGroup = this.fb.group({\n      status: [''],\n      type: [''],\n      searchTerm: [''],\n    });\n    this.subscriptions.push(\n      this.filterGroup.controls.status.valueChanges.subscribe(() =>\n        this.filter()\n      )\n    );\n    this.subscriptions.push(\n      this.filterGroup.controls.type.valueChanges.subscribe(() => this.filter())\n    );\n  }\n\n  filter() {\n    const filter = {};\n    const status = this.filterGroup.get('status').value;\n    if (status) {\n      filter['status'] = status;\n    }\n\n    const type = this.filterGroup.get('type').value;\n    if (type) {\n      filter['type'] = type;\n    }\n    this.customerService.patchState({ filter });\n  }\n\n  // search\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n      The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n      we are limiting the amount of server requests emitted to a maximum of one every 150ms\n      */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n      this.customerService.patchState({ searchTerm: searchTerm.toLowerCase() });\n  }\n\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.customerService.patchState({ sorting });\n  }\n\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.customerService.patchState({ paginator });\n  }\n\n  // form actions\n  create() {\n    this.edit(undefined);\n  }\n\n  edit(id: number) {\n    const modalRef = this.modalService.open(EditCustomerModalComponent, { size: 'xl' });\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(() =>\n      this.customerService.fetch(),\n      () => { }\n    );\n  }\n\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteCustomerModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteCustomersModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n\n  updateStatusForSelected() {\n    const modalRef = this.modalService.open(UpdateCustomersStatusModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchCustomersModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\">Customers list</h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">New Customer</button>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <!-- begin: Filtration form -->\n    <div class=\"form form-label-right\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-4\">\n          <div class=\"row\" [formGroup]=\"filterGroup\">\n            <div class=\"col-lg-6\">\n              <select class=\"form-control\" name=\"status\" placeholder=\"Filter by Status\" formControlName=\"status\">\n                <option value=\"\">All</option>\n                <option value=\"1\">Susspended</option>\n                <option value=\"2\">Active</option>\n                <option value=\"3\">Pending</option>\n              </select><small class=\"form-text text-muted\"><b>Filter</b> by Status</small>\n            </div>\n            <div class=\"col-lg-6\">\n              <select class=\"form-control\" placeholder=\"Filter by Type\" name=\"type\" formControlName=\"type\">\n                <option value=\"\">All</option>\n                <option value=\"1\">Business</option>\n                <option value=\"2\">Individual</option>\n              </select><small class=\"form-text text-muted\"><b>Filter</b> by Type</small>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-2\" [formGroup]=\"searchGroup\">\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\" value=\"\"\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>Search</b> in all fields</small>\n        </div>\n      </div>\n    </div>\n    <!-- end: Filtration form -->\n\n    <!-- begin: Grouping -->\n    <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n      <div class=\"form\">\n        <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n          <div class=\"col-xl-12\">\n            <div class=\"form-group form-group-inline\">\n              <div class=\"form-label form-label-no-wrap\">\n                <label class=\"font-bold font-danger\"><span>Selected records count:\n                    <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\n              </div>\n              <div>\n                <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"deleteSelected()\">\n                  <i class=\"fa fa-trash\"></i> Delete All\n                </button>&nbsp;\n                <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"fetchSelected()\">\n                  <i class=\"fa fa-stream\"></i> Fetch Selected\n                </button>&nbsp;\n                <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"updateStatusForSelected()\">\n                  <i class=\"fa fa-sync-alt\"></i> Update Status\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <!-- end: Grouping -->\n\n    <!-- begin:Table -->\n    <div class=\"table-responsive angular-bootstrap-table\">\n      <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n        <thead>\n          <th class=\"selection-cell-header\" data-row-selection=\"true\">\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\n                [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\n          </th>\n          <th>\n            ID\n            <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            FIRSTNAME\n            <app-sort-icon column=\"firstName\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            LASTNAME\n            <app-sort-icon column=\"lastName\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            EMAIL\n            <app-sort-icon column=\"email\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            GENDER\n            <app-sort-icon column=\"gender\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            STATUS\n            <app-sort-icon column=\"status\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            TYPE\n            <app-sort-icon column=\"type\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>ACTIONS</th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let customer of customerService.items$ | async\">\n            <td class=\"selection-cell\">\n              <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(customer.id)\"\n                  [checked]=\"grouping.isRowSelected(customer.id)\" />\n                <span></span>\n              </label>\n            </td>\n            <td>{{ customer.id }}</td>\n            <td>{{ customer.firstName }}</td>\n            <td>{{ customer.lastName }}</td>\n            <td>{{ customer.email }}</td>\n            <td>{{ customer.gender }}</td>\n            <td>\n              <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\n                [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\n                <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\n                <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\n                <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\n              </span>\n            </td>\n            <td>\n              <span class=\"label label-dot label-primary mr-2\" [class.label-success]=\"customer.type === 1\"\n                [class.label-primary]=\"customer.type === 2\"></span>&nbsp;<span class=\"font-bold font-primary\">\n                <ng-container *ngIf=\"customer.type === 1\">Business</ng-container>\n                <ng-container *ngIf=\"customer.type === 2\">Individual</ng-container>\n              </span>\n            </td>\n            <td>\n\n              <a title=\"Edit customer\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n                (click)=\"edit(customer.id)\">\n                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\n                </span>\n              </a>\n\n              <a title=\"Delete customer\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                (click)=\"delete(customer.id)\">\n                <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-danger\">\n                </span>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- end: Table -->\n    <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\n      [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-e-commerce',\n  templateUrl: './e-commerce.component.html',\n})\nexport class ECommerceComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-customer-modal',\n  templateUrl: './delete-customer-modal.component.html',\n  styleUrls: ['./delete-customer-modal.component.scss']\n})\nexport class DeleteCustomerModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteCustomer() {\n    this.isLoading = true;\n    const sb = this.customersService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Customer Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Customer is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this customer?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteCustomer()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\nimport { exhaustMap, map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState, BaseModel, PaginatorState, SortState, GroupingState } from '../../../../_metronic/shared/crud-table';\nimport { Customer } from '../../_models/customer.model';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { Router } from '@angular/router';\n\nconst DEFAULT_STATE: ITableState = {\n  filter: {},\n  paginator: new PaginatorState(),\n  sorting: new SortState(),\n  searchTerm: '',\n  grouping: new GroupingState(),\n  entityId: undefined\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService extends TableService<Customer> implements OnDestroy {\n  API_URL = `${environment.apiUrl}/customers`;\n  constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<Customer>> {\n    return this.http.get<Customer[]>(this.API_URL).pipe(\n      map((response: Customer[]) => {\n        const filteredResult = baseFilter(response, tableState);\n        const result: TableResponseModel<Customer> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\n    return this.http.get<Customer[]>(this.API_URL).pipe(\n      map((customers: Customer[]) => {\n        return customers.filter(c => ids.indexOf(c.id) > -1).map(c => {\n          c.status = status;\n          return c;\n        });\n      }),\n      exhaustMap((customers: Customer[]) => {\n        const tasks$ = [];\n        customers.forEach(customer => {\n          tasks$.push(this.update(customer));\n        });\n        return forkJoin(tasks$);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-product-modal',\n  templateUrl: './delete-product-modal.component.html',\n  styleUrls: ['./delete-product-modal.component.scss']\n})\nexport class DeleteProductModalComponent implements OnInit, OnDestroy {\n\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteProduct() {\n    this.isLoading = true;\n    const sb = this.productsService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Product Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Product is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this product?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteProduct()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport {\n  GroupingState,\n  ICreateAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IEditAction,\n  IFetchSelectedAction,\n  IGroupingView,\n  ISearchView,\n  ISortView,\n  PaginatorState,\n  SortState,\n} from '../../../../../_metronic/shared/crud-table';\nimport { RemarksService } from '../../../_services';\nimport { DeleteRemarkModalComponent } from './delete-remark-modal/delete-remark-modal.component';\nimport { DeleteRemarksModalComponent } from './delete-remarks-modal/delete-remarks-modal.component';\nimport { EditRemarkModalComponent } from './edit-remark-modal/edit-remark-modal.component';\nimport { FetchRemarksModalComponent } from './fetch-remarks-modal/fetch-remarks-modal.component';\n\n@Component({\n  selector: 'app-remarks',\n  templateUrl: './remarks.component.html',\n  styleUrls: ['./remarks.component.scss'],\n})\nexport class RemarksComponent\n  implements\n    OnInit,\n    OnDestroy,\n    IDeleteAction,\n    IDeleteSelectedAction,\n    IFetchSelectedAction,\n    ISortView,\n    IGroupingView,\n    ISearchView,\n    IEditAction,\n    ICreateAction {\n  @Input() productId: number;\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public remarksService: RemarksService\n  ) {}\n\n  ngOnInit(): void {\n    this.searchForm();\n    const sb = this.remarksService.isLoading$.subscribe(\n      (res) => (this.isLoading = res)\n    );\n    this.subscriptions.push(sb);\n    this.remarksService.patchState({ entityId: this.productId });\n    this.grouping = this.remarksService.grouping;\n    this.paginator = this.remarksService.paginator;\n    this.sorting = this.remarksService.sorting;\n    this.remarksService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n  //\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\n  */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n    this.remarksService.patchState({ searchTerm });\n  }\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.remarksService.patchState({ sorting });\n  }\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.remarksService.patchState({ paginator });\n  }\n  // actions\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteRemarkModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(\n      () => this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteRemarksModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchRemarksModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  edit(id: number): void {\n    const modalRef = this.modalService.open(EditRemarkModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.componentInstance.productId = this.productId;\n    modalRef.result.then(() =>\n      this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  create(): void {\n    this.edit(undefined);\n  }\n}\n","<div class=\"mt-5\">\n  <!-- begin: Filtration form -->\n  <div class=\"form margin-b-30\">\n    <div class=\"form-filtration\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-md-2 margin-bottom-10-mobile\">\n          <form [formGroup]=\"searchGroup\">\n            <div>\n              <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\"\n                formControlName=\"searchTerm\" />\n              <small class=\"form-text text-muted\"><b>Search</b> in all fields</small></div>\n          </form>\n        </div>\n        <div class=\"col-md-8 margin-bottom-10-mobile\"></div>\n        <div class=\"col-md-2 text-right margin-bottom-10-mobile\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">\n            Create new remark\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end: Filtration form -->\n\n  <!-- begin: Grouping -->\n  <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n    <div class=\"form\">\n      <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div class=\"col-xl-12\">\n          <div class=\"form-group form-group-inline\">\n            <div class=\"form-label form-label-no-wrap\">\n              <label class=\"font-bold font-danger\"><span>Selected records count:\n                  <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\n            </div>\n            <div>\n              <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                (click)=\"deleteSelected()\">\n                <i class=\"fa fa-trash\"></i> Delete All\n              </button>&nbsp;\n              <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                (click)=\"fetchSelected()\">\n                <i class=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <!-- end: Grouping -->\n  <!-- begin:Table -->\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th class=\"selection-cell-header\" data-row-selection=\"true\">\n          <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\n              [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\n        </th>\n        <th>\n          ID\n          <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          TEXT\n          <app-sort-icon column=\"text\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          DUE DATE\n          <app-sort-icon column=\"dueDate\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>ACTIONS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let remark of remarksService.items$ | async\">\n          <td class=\"selection-cell\">\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(remark.id)\"\n                [checked]=\"grouping.isRowSelected(remark.id)\" />\n              <span></span>\n            </label>\n          </td>\n          <td>{{ remark.id }}</td>\n          <td>{{ remark.text }}</td>\n          <td>{{ remark.dueDate }}</td>\n          <td>\n            <button title=\"Edit remark\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n              (click)=\"edit(remark.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\n              </span>\n            </button>\n            <button title=\"Delete remark\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n              (click)=\"delete(remark.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\n              </span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <!-- end: Table -->\n  <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\n    [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { RemarksService } from '../../../../_services';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../../../../../_metronic/core';\nimport { ProductRemark } from '../../../../_models/product-remark.model';\nimport { catchError, first, tap } from 'rxjs/operators';\n\nconst EMPTY_REMARK: ProductRemark = {\n  id: undefined,\n  carId: undefined,\n  text: '',\n  type: 1, // Info 1, Note 2, Reminder 3\n  dueDate: ''\n};\n\n@Component({\n  selector: 'app-edit-remark-modal',\n  templateUrl: './edit-remark-modal.component.html',\n  styleUrls: ['./edit-remark-modal.component.scss'],\n  providers: [\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ]\n})\nexport class EditRemarkModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  @Input() productId: number;\n  isLoading$;\n  remark: ProductRemark;\n  formGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private remarksService: RemarksService,\n    private fb: FormBuilder, public modal: NgbActiveModal\n    ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.remarksService.isLoading$;\n    this.loadRemarks();\n  }\n\n  loadRemarks() {\n    if (!this.id) {\n      this.remark = EMPTY_REMARK;\n      this.remark.carId = this.productId;\n      this.loadForm();\n    } else {\n      const sb = this.remarksService.getItemById(this.id).pipe(\n        first(),\n        catchError((errorMessage) => {\n          this.modal.dismiss(errorMessage);\n          const empty = EMPTY_REMARK;\n          empty.carId = this.productId;\n          return of(empty);\n        })\n      ).subscribe((remark: ProductRemark) => {\n        this.remark = remark;\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      text: [this.remark.text, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10000)])],\n      dueDate: [this.remark.dueDate, Validators.compose([Validators.nullValidator])],\n      type: [this.remark.type, Validators.compose([Validators.required])]\n    });\n  }\n\n  save() {\n    this.prepareRemark();\n    if (this.remark.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.remarksService.update(this.remark).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.remark);\n      }),\n    ).subscribe(res => this.remark = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.remarksService.create(this.remark).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.remark);\n      }),\n    ).subscribe((res: ProductRemark) => this.remark = res);\n    this.subscriptions.push(sbCreate);\n  }\n\n  private prepareRemark() {\n    const formData = this.formGroup.value;\n    this.remark.carId = this.productId;\n    this.remark.dueDate = formData.dueDate;\n    this.remark.type = +formData.type;\n    this.remark.text = formData.text;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n      <ng-container *ngIf=\"remark\">\n        <ng-container *ngIf=\"remark.id\">Edit</ng-container>\n        <ng-container *ngIf=\"!remark.id\">Create</ng-container>\n        remark\n        <ng-container *ngIf=\"remark.id\"> with ID '{{remark.id}}</ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"overlay overlay-block cursor-default modal-body\">\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"overlay-layer bg-transparent\">\n        <div class=\"spinner spinner-lg spinner-success\"></div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"remark\">\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n        <div class=\"form-group row\">\n          <div class=\"col-xl-12\">\n\n            <label class=\"form-label\">Enter Text</label>\n            <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" name=\"text\" placeholder=\"Text\"\n              autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('text')\" [class.is-valid]=\"isControlValid('text')\"\n              formControlName=\"text\" />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('text')\">Text was entered correct</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'text')\">Text is required</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'text')\">Text should have at least 3\n              symbols</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'text')\">Text should have maximum 10000\n              symbols</div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-xl-12\">\n            <label>Dute date</label>\n            <div class=\"input-group input-group-solid\">\n              <input type=\"text\" name=\"dueDate\" class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\" placeholder=\"dd/mm/yyyy\" ngbDatepicker #d=\"ngbDatepicker\"\n                [class.is-invalid]=\"isControlInvalid('dueDate')\" [class.is-valid]=\"isControlValid('dueDate')\"\n                formControlName=\"dueDate\" readonly=\"true\" />\n              <div class=\"input-group-append\" (click)=\"d.toggle()\">\n                <span class=\"input-group-text\">\n                  <i class=\"text-dark-50 flaticon-calendar\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('dueDate')\">Due date was entered correct</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'dueDate')\">Please enter <b>Due date</b> in\n              'mm/dd/yyyy' format</div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-12\">\n            <label>Select Type</label>\n            <select class=\"form-control form-control-lg form-control-solid\" name=\"type\" formControlName=\"type\">\n              <option value=\"1\">Info</option>\n              <option value=\"2\">Note</option>\n              <option value=\"3\">Reminder</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Type</b></div>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n    <ng-container *ngIf=\"remark\">\n\n      <button type=\"submit\" class=\"btn btn-primary btn-elevate\" (click)=\"save()\"\n        [disabled]=\"formGroup.invalid\">Save</button>\n    </ng-container>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { Product } from '../../_models/product.model';\nimport { ProductsService } from '../../_services';\n\nconst EMPTY_PRODUCT: Product = {\n  id: undefined,\n  model: '',\n  manufacture: 'Pontiac',\n  modelYear: 2020,\n  mileage: 0,\n  description: '',\n  color: 'Red',\n  price: 0,\n  condition: 1,\n  status: 1,\n  VINCode: '',\n};\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit, OnDestroy {\n  id: number;\n  product: Product;\n  previous: Product;\n  formGroup: FormGroup;\n  isLoading$: Observable<boolean>;\n  errorMessage = '';\n  tabs = {\n    BASIC_TAB: 0,\n    REMARKS_TAB: 1,\n    SPECIFICATIONS_TAB: 2\n  };\n  activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Remarks | 2 => Specifications\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.productsService.isLoading$;\n    this.loadProduct();\n  }\n\n  loadProduct() {\n    const sb = this.route.paramMap.pipe(\n      switchMap(params => {\n        // get id from URL\n        this.id = Number(params.get('id'));\n        if (this.id || this.id > 0) {\n          return this.productsService.getItemById(this.id);\n        }\n        return of(EMPTY_PRODUCT);\n      }),\n      catchError((errorMessage) => {\n        this.errorMessage = errorMessage;\n        return of(undefined);\n      }),\n    ).subscribe((res: Product) => {\n      if (!res) {\n        this.router.navigate(['/products'], { relativeTo: this.route });\n      }\n\n      this.product = res;\n      this.previous = Object.assign({}, res);\n      this.loadForm();\n    });\n    this.subscriptions.push(sb);\n  }\n\n  loadForm() {\n    if (!this.product) {\n      return;\n    }\n\n    this.formGroup = this.fb.group({\n      model: [this.product.model, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      manufacture: [this.product.manufacture],\n      modelYear: [this.product.modelYear, Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.min(1900),\n        Validators.maxLength(4),\n        Validators.max(2023)\n      ])],\n      mileage: [this.product.mileage, Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.min(0),\n        Validators.maxLength(100),\n        Validators.max(1000000)\n      ])],\n      color: [this.product.color],\n      price: [this.product.price],\n      description: [this.product.description],\n      status: [this.product.status],\n      condition: [this.product.condition],\n      VINCode: [this.product.VINCode, Validators.required]\n    });\n  }\n\n  reset() {\n    if (!this.previous) {\n      return;\n    }\n\n    this.product = Object.assign({}, this.previous);\n    this.loadForm();\n  }\n\n  save() {\n    this.formGroup.markAllAsTouched();\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    const formValues = this.formGroup.value;\n    this.product = Object.assign(this.product, formValues);\n    if (this.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.productsService.update(this.product).pipe(\n      tap(() => this.router.navigate(['/ecommerce/products'])),\n      catchError((errorMessage) => {\n        console.error('UPDATE ERROR', errorMessage);\n        return of(this.product);\n      })\n    ).subscribe(res => this.product = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.productsService.create(this.product).pipe(\n      tap(() => this.router.navigate(['/ecommerce/products'])),\n      catchError((errorMessage) => {\n        console.error('UPDATE ERROR', errorMessage);\n        return of(this.product);\n      })\n    ).subscribe(res => this.product = res as Product);\n    this.subscriptions.push(sbCreate);\n  }\n\n  changeTab(tabId: number) {\n    this.activeTabId = tabId;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation: string, controlName: string) {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <ng-container *ngIf=\"isLoading$ | async\">\n    <div class=\"progress progress-modal\">\n      <div\n        class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\n        role=\"progressbar\"\n        style=\"width: 100%\"\n        aria-valuenow=\"100\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      ></div>\n    </div>\n  </ng-container>\n\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\">\n        <ng-container *ngIf=\"product\">\n          {{ id ? \"Edit\" : \"New\" }} product\n          <span *ngIf=\"product && product.id\"\n            >'{{ product.manufacture }} {{ product.model }} -\n            {{ product.modelYear }}'</span\n          >\n        </ng-container>\n        {{ product?.manufacture }}\n      </h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/ecommerce/products\">\n        <i class=\"fa fa-arrow-left\"></i>Back\n      </a>\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\n        <i class=\"fa fa-redo\"></i>Reset\n      </button>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\n        <a\n          class=\"nav-link\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\"\n        >\n          Basic info\n        </a>\n      </li>\n      <li\n        *ngIf=\"product && product.id\"\n        class=\"nav-item cursor-pointer\"\n        (click)=\"changeTab(tabs.REMARKS_TAB)\"\n      >\n        <a\n          class=\"nav-link\"\n          data-toggle=\"tab\"\n          role=\"button\"\n          [attr.aria-selected]=\"activeTabId === tabs.REMARKS_TAB\"\n          [class.active]=\"activeTabId === tabs.REMARKS_TAB\"\n          >Product remarks</a\n        >\n      </li>\n      <li\n        *ngIf=\"product && product.id\"\n        class=\"nav-item cursor-pointer\"\n        (click)=\"changeTab(tabs.SPECIFICATIONS_TAB)\"\n      >\n        <a\n          class=\"nav-link\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeTabId === tabs.SPECIFICATIONS_TAB\"\n          [class.active]=\"activeTabId === tabs.SPECIFICATIONS_TAB\"\n          >Product specifications</a\n        >\n      </li>\n    </ul>\n\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\n      <div class=\"mt-5\" *ngIf=\"product\">\n        <form\n          action=\"#\"\n          class=\"form form-label-right\"\n          [formGroup]=\"formGroup\"\n          (ngSubmit)=\"save()\"\n        >\n          <div class=\"form-group row\">\n            <div class=\"col-lg-4\">\n              <label>Enter Model</label>\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"Model\"\n                name=\"model\"\n                [class.is-invalid]=\"isControlInvalid('model')\"\n                [class.is-valid]=\"isControlValid('model')\"\n                formControlName=\"model\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('model')\">\n                Please enter <b>Model</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('model')\">\n                Model was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'model')\"\n              >\n                Model is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'model')\"\n              >\n                Model should have at least 3 symbols\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'model')\"\n              >\n                Model should have maximum 100 symbols\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Manufacture</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"manufacture\"\n                formControlName=\"manufacture\"\n              >\n                <option value=\"Pontiac\">Pontiac</option>\n                <option value=\"Kia\">Kia</option>\n                <option value=\"Lotus\">Lotus</option>\n                <option value=\"Subaru\">Subaru</option>\n                <option value=\"Jeep\">Jeep</option>\n                <option value=\"Isuzu\">Isuzu</option>\n                <option value=\"Mitsubishi\">Mitsubishi</option>\n                <option value=\"Oldsmobile\">Oldsmobile</option>\n                <option value=\"Chevrolet\">Chevrolet</option>\n                <option value=\"Chrysler\">Chrysler</option>\n                <option value=\"Audi\">Audi</option>\n                <option value=\"Suzuki\">Suzuki</option>\n                <option value=\"GMC\">GMC</option>\n                <option value=\"Cadillac\">Cadillac</option>\n                <option value=\"Infinity\">Infinity</option>\n                <option value=\"Mercury\">Mercury</option>\n                <option value=\"Dodge\">Dodge</option>\n                <option value=\"Ram\">Ram</option>\n                <option value=\"Lexus\">Lexus</option>\n                <option value=\"Lamborghini\">Lamborghini</option>\n                <option value=\"Honda\">Honda</option>\n                <option value=\"Nissan\">Nissan</option>\n                <option value=\"Ford\">Ford</option>\n                <option value=\"Hyundai\">Hyundai</option>\n                <option value=\"Saab\">Saab</option>\n                <option value=\"Toyota\">Toyota</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Color</b></div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Enter Model year</label>\n              <input\n                type=\"number\"\n                class=\"form-control form-control-lg form-control-solid\"\n                placeholder=\"Model Year\"\n                name=\"modelYear\"\n                [class.is-invalid]=\"isControlInvalid('modelYear')\"\n                [class.is-valid]=\"isControlValid('modelYear')\"\n                formControlName=\"modelYear\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('modelYear')\">\n                Please enter <b>Model</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('modelYear')\">\n                Model year was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'modelYear')\"\n              >\n                Model year is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'modelYear')\"\n              >\n                Model year should have at least 3 symbols\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('min', 'modelYear')\"\n              >\n                Model year can't be less than 1900\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('max', 'modelYear')\"\n              >\n                Model year can't be more than 2023\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'modelYear')\"\n              >\n                Model year should have maximum 100 symbols\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"col-lg-4\">\n              <label>Enter Mileage</label>\n              <input\n                type=\"number\"\n                class=\"form-control form-control-lg form-control-solid\"\n                placeholder=\"Mileage\"\n                name=\"mileage\"\n                [class.is-invalid]=\"isControlInvalid('mileage')\"\n                [class.is-valid]=\"isControlValid('mileage')\"\n                formControlName=\"mileage\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('mileage')\">\n                Please enter <b>Mileage</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('mileage')\">\n                Mileage was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'mileage')\"\n              >\n                Mileage is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'mileage')\"\n              >\n                Mileage should have at least 1 symbol\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'mileage')\"\n              >\n                Mileage year should have maximum 100 symbols\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Color</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"color\"\n                formControlName=\"color\"\n              >\n                <option value=\"Red\">Red</option>\n                <option value=\"CadetBlue\">CadetBlue</option>\n                <option value=\"Eagle\">Eagle</option>\n                <option value=\"Gold\">Gold</option>\n                <option value=\"LightSlateGrey\">LightSlateGrey</option>\n                <option value=\"RoyalBlue\">RoyalBlue</option>\n                <option value=\"Crimson\">Crimson</option>\n                <option value=\"Blue\">Blue</option>\n                <option value=\"Sienna\">Sienna</option>\n                <option value=\"Indigo\">Indigo</option>\n                <option value=\"Green\">Green</option>\n                <option value=\"Violet\">Violet</option>\n                <option value=\"GoldenRod\">GoldenRod</option>\n                <option value=\"OrangeRed\">OrangeRed</option>\n                <option value=\"Khaki\">Khaki</option>\n                <option value=\"Teal\">Teal</option>\n                <option value=\"Purple\">Purple</option>\n                <option value=\"Orange\">Orange</option>\n                <option value=\"Pink\">Pink</option>\n                <option value=\"Black\">Black</option>\n                <option value=\"DarkTurquoise\">DarkTurquoise</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Color</b></div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Enter Price ($)</label>\n              <input\n                type=\"number\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"Price\"\n                name=\"price\"\n                [class.is-invalid]=\"isControlInvalid('price')\"\n                [class.is-valid]=\"isControlValid('price')\"\n                formControlName=\"price\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('price')\">\n                Please enter <b>Price</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('price')\">\n                Price was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'price')\"\n              >\n                Price is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'price')\"\n              >\n                Price should have at least 3 symbols\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'price')\"\n              >\n                Price should have maximum 100 symbols\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"col-lg-4\">\n              <label>Enter VIN code</label>\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"VIN Code\"\n                name=\"VINCode\"\n                [class.is-invalid]=\"isControlInvalid('VINCode')\"\n                [class.is-valid]=\"isControlValid('VINCode')\"\n                formControlName=\"VINCode\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('VINCode')\">\n                Please enter <b>VIN code</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('VINCode')\">\n                VIN code was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'VINCode')\"\n              >\n                VIN code is required\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Status</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"status\"\n                formControlName=\"status\"\n              >\n                <option value=\"1\">Selling</option>\n                <option value=\"2\">Sold</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Status</b></div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Condition</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"condition\"\n                formControlName=\"condition\"\n              >\n                <option value=\"1\">New</option>\n                <option value=\"2\">Used</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Condition</b></div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label>Description</label>\n            <textarea\n              name=\"description\"\n              class=\"form-control form-control-solid\"\n              formControlName=\"description\"\n            ></textarea>\n          </div>\n          <div class=\"float-right\">\n            <a\n              class=\"btn btn-default font-weight-bold mr-2\"\n              routerLink=\"/ecommerce/products\"\n              >Cancel</a\n            >\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary font-weight-bold mr-2\"\n              [disabled]=\"formGroup.invalid\"\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </ng-container>\n\n    <ng-container\n      *ngIf=\"activeTabId === tabs.REMARKS_TAB && product && product.id\"\n    >\n      <app-remarks [productId]=\"product.id\"></app-remarks>\n    </ng-container>\n\n    <ng-container\n      *ngIf=\"activeTabId === tabs.SPECIFICATIONS_TAB && product && product.id\"\n    >\n      <app-specifications [productId]=\"product.id\"></app-specifications>\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { from, of, Subscription } from 'rxjs';\nimport { RemarksService } from '../../../../_services';\nimport { ProductRemark } from '../../../../_models/product-remark.model';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fetch-remarks-modal',\n  templateUrl: './fetch-remarks-modal.component.html',\n  styleUrls: ['./fetch-remarks-modal.component.scss']\n})\nexport class FetchRemarksModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  remarks: ProductRemark[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private remarksService: RemarksService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadRemarks();\n  }\n\n  loadRemarks() {\n    const sb = this.remarksService.items$.pipe(\n      first()\n    ).subscribe((res: ProductRemark[]) => {\n      this.remarks = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    const sb = from([]).pipe( // fake => update to call request method from your server\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected remarks</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>ID</th>\n        <th>TEXT</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let remark of remarks\">\n          <td>{{remark.id}}</td>\n          <td>{{remark.text}}</td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { SpecificationsService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-specs-modal',\n  templateUrl: './delete-specs-modal.component.html',\n  styleUrls: ['./delete-specs-modal.component.scss']\n})\nexport class DeleteSpecsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSpecs() {\n    this.isLoading = true;\n    const sb = this.specsService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Specifications Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Specifications are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected specifications?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteSpecs()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport {\n  GroupingState,\n  ICreateAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IEditAction,\n  IFetchSelectedAction,\n  IGroupingView,\n  ISearchView,\n  ISortView,\n  PaginatorState,\n  SortState,\n} from '../../../../../_metronic/shared/crud-table';\nimport { SPECIFICATIONS_DICTIONARY } from '../../../_models/specification.dictionary';\nimport { SpecificationsService } from '../../../_services';\nimport { DeleteSpecModalComponent } from './delete-spec-modal/delete-spec-modal.component';\nimport { DeleteSpecsModalComponent } from './delete-specs-modal/delete-specs-modal.component';\nimport { EditSpecModalComponent } from './edit-spec-modal/edit-spec-modal.component';\nimport { FetchSpecsModalComponent } from './fetch-specs-modal/fetch-specs-modal.component';\n\n@Component({\n  selector: 'app-specifications',\n  templateUrl: './specifications.component.html',\n  styleUrls: ['./specifications.component.scss'],\n})\nexport class SpecificationsComponent\n  implements\n    OnInit,\n    OnDestroy,\n    IDeleteAction,\n    IDeleteSelectedAction,\n    IFetchSelectedAction,\n    ISortView,\n    IGroupingView,\n    ISearchView,\n    IEditAction,\n    ICreateAction {\n  @Input() productId: number;\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public specsService: SpecificationsService\n  ) {}\n\n  ngOnInit(): void {\n    this.searchForm();\n    const sb = this.specsService.isLoading$.subscribe(\n      (res) => (this.isLoading = res)\n    );\n    this.subscriptions.push(sb);\n    this.specsService.patchState({ entityId: this.productId });\n    this.grouping = this.specsService.grouping;\n    this.paginator = this.specsService.paginator;\n    this.sorting = this.specsService.sorting;\n    this.specsService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n  //\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\n  */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n    this.specsService.patchState({ searchTerm });\n  }\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.specsService.patchState({ sorting });\n  }\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.specsService.patchState({ paginator });\n  }\n  // actions\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteSpecModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(\n      () => this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteSpecsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchSpecsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  edit(id: number): void {\n    const modalRef = this.modalService.open(EditSpecModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.componentInstance.productId = this.productId;\n    modalRef.result.then(() =>\n      this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  create(): void {\n    this.edit(undefined);\n  }\n}\n","<div class=\"mt-5\">\n  <!-- begin: Filtration form -->\n  <div class=\"form margin-b-30\">\n    <div class=\"form-filtration\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-md-2 margin-bottom-10-mobile\">\n          <form [formGroup]=\"searchGroup\">\n            <div>\n              <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\"\n                formControlName=\"searchTerm\" />\n              <small class=\"form-text text-muted\"><b>Search</b> by VALUE</small></div>\n          </form>\n        </div>\n        <div class=\"col-md-6 margin-bottom-10-mobile\"></div>\n        <div class=\"col-md-4 text-right margin-bottom-10-mobile\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">\n            Create new specification\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end: Filtration form -->\n\n  <!-- begin: Grouping -->\n  <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n    <div class=\"form\">\n      <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div class=\"col-xl-12\">\n          <div class=\"form-group form-group-inline\">\n            <div class=\"form-label form-label-no-wrap\">\n              <label class=\"font-bold font-danger\"><span>Selected records count:\n                  <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\n            </div>\n            <div>\n              <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                (click)=\"deleteSelected()\">\n                <i class=\"fa fa-trash\"></i> Delete All\n              </button>&nbsp;\n              <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                (click)=\"fetchSelected()\">\n                <i class=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <!-- end: Grouping -->\n  <!-- begin:Table -->\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th class=\"selection-cell-header\" data-row-selection=\"true\">\n          <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\n              [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\n        </th>\n        <th>\n          ID\n          <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          SPECIFICATION TYPE\n          <app-sort-icon column=\"specId\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          VALUE\n          <app-sort-icon column=\"value\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>ACTIONS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let spec of specsService.items$ | async\">\n          <td class=\"selection-cell\">\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(spec.id)\"\n                [checked]=\"grouping.isRowSelected(spec.id)\" />\n              <span></span>\n            </label>\n          </td>\n          <td>{{ spec.id }}</td>\n          <td>{{ specs[spec.specId] }}</td>\n          <td>{{ spec.value }}</td>\n          <td>\n            <button title=\"Edit spec\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n              (click)=\"edit(spec.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\n              </span>\n            </button>\n            <button title=\"Delete specification\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n              (click)=\"delete(spec.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\n              </span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <!-- end: Table -->\n  <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\n    [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-products-modal',\n  templateUrl: './delete-products-modal.component.html',\n  styleUrls: ['./delete-products-modal.component.scss']\n})\nexport class DeleteProductsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteProducts() {\n    this.isLoading = true;\n    const sb = this.productsService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Products Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Products are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected products?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteProducts()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { from, of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { ProductSpecification } from '../../../../_models/product-specification.model';\nimport { SPECIFICATIONS_DICTIONARY } from '../../../../_models/specification.dictionary';\nimport { SpecificationsService } from '../../../../_services';\n\n@Component({\n  selector: 'app-fetch-specs-modal',\n  templateUrl: './fetch-specs-modal.component.html',\n  styleUrls: ['./fetch-specs-modal.component.scss']\n})\nexport class FetchSpecsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\n  specifications: ProductSpecification[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadSpecs();\n  }\n\n  loadSpecs() {\n    const sb = this.specsService.items$.pipe(\n      first()\n    ).subscribe((res: ProductSpecification[]) => {\n      this.specifications = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    const sb = from([]).pipe( // fake => update to call request method from your server\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected specifications</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>ID</th>\n        <th>SPECIFICATION TYPE</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let spec of specifications\">\n          <td>{{spec.id}}</td>\n          <td>{{specs[spec.specId]}}</td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, finalize, first, tap } from 'rxjs/operators';\nimport { Customer } from '../../../_models/customer.model';\nimport { CustomersService } from '../../../_services';\nimport { CustomAdapter, CustomDateParserFormatter, getDateFromString } from '../../../../../_metronic/core';\n\nconst EMPTY_CUSTOMER: Customer = {\n  id: undefined,\n  firstName: '',\n  lastName: '',\n  email: '',\n  userName: '',\n  gender: 'Female',\n  status: 2,\n  dob: undefined,\n  dateOfBbirth: '',\n  ipAddress: '251.237.126.210',\n  type: 2\n};\n\n@Component({\n  selector: 'app-edit-customer-modal',\n  templateUrl: './edit-customer-modal.component.html',\n  styleUrls: ['./edit-customer-modal.component.scss'],\n  // NOTE: For this example we are only providing current component, but probably\n  // NOTE: you will w  ant to provide your main App Module\n  providers: [\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ]\n})\nexport class EditCustomerModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading$;\n  customer: Customer;\n  formGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private customersService: CustomersService,\n    private fb: FormBuilder, public modal: NgbActiveModal\n    ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.customersService.isLoading$;\n    this.loadCustomer();\n  }\n\n  loadCustomer() {\n    if (!this.id) {\n      this.customer = EMPTY_CUSTOMER;\n      this.loadForm();\n    } else {\n      const sb = this.customersService.getItemById(this.id).pipe(\n        first(),\n        catchError((errorMessage) => {\n          this.modal.dismiss(errorMessage);\n          return of(EMPTY_CUSTOMER);\n        })\n      ).subscribe((customer: Customer) => {\n        this.customer = customer;\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      firstName: [this.customer.firstName, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      lastName: [this.customer.lastName, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      email: [this.customer.email, Validators.compose([Validators.required, Validators.email])],\n      dob: [this.customer.dateOfBbirth, Validators.compose([Validators.nullValidator])],\n      userName: [this.customer.userName, Validators.compose([Validators.required])],\n      gender: [this.customer.gender, Validators.compose([Validators.required])],\n      ipAddress: [this.customer.ipAddress],\n      type: [this.customer.type, Validators.compose([Validators.required])]\n    });\n  }\n\n  save() {\n    this.prepareCustomer();\n    if (this.customer.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.customersService.update(this.customer).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.customer);\n      }),\n    ).subscribe(res => this.customer = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.customersService.create(this.customer).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.customer);\n      }),\n    ).subscribe((res: Customer) => this.customer = res);\n    this.subscriptions.push(sbCreate);\n  }\n\n  private prepareCustomer() {\n    const formData = this.formGroup.value;\n    this.customer.dob = new Date(formData.dob);\n    this.customer.email = formData.email;\n    this.customer.firstName = formData.firstName;\n    this.customer.dateOfBbirth = formData.dob;\n    this.customer.ipAddress = formData.ipAddress;\n    this.customer.lastName = formData.lastName;\n    this.customer.type = +formData.type;\n    this.customer.userName = formData.userName;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n      <ng-container *ngIf=\"customer\">\n        <ng-container *ngIf=\"customer.id\">Edit</ng-container>\n        <ng-container *ngIf=\"!customer.id\">Create</ng-container>\n        customer\n        <ng-container *ngIf=\"customer.id\"\n          >'{{ customer.firstName }} {{ customer.lastName }}'</ng-container\n        >\n      </ng-container>\n    </div>\n  </div>\n  <div\n    class=\"overlay overlay-block cursor-default modal-body\"\n    style=\"min-height: 404px\"\n  >\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"overlay-layer bg-transparent\">\n        <div class=\"spinner spinner-lg spinner-success\"></div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"customer\">\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n        <div class=\"form-group row\">\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter First name</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"firstName\"\n              placeholder=\"First Name\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('firstName')\"\n              [class.is-valid]=\"isControlValid('firstName')\"\n              formControlName=\"firstName\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('firstName')\">\n              First name was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'firstName')\"\n            >\n              First name is required\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('minlength', 'firstName')\"\n            >\n              First name should have at least 3 symbols\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('maxlength', 'firstName')\"\n            >\n              First name should have maximum 100 symbols\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter Last name</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid is-invalid\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('lastName')\"\n              [class.is-valid]=\"isControlValid('lastName')\"\n              formControlName=\"lastName\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('lastName')\">\n              Last name was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'lastName')\"\n            >\n              Last name is required\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('minlength', 'lastName')\"\n            >\n              Last name should have at least 3 symbols\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('maxLength', 'lastName')\"\n            >\n              Last name should have maximum 100 symbols\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter Login</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"userName\"\n              placeholder=\"Login\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('userName')\"\n              [class.is-valid]=\"isControlValid('userName')\"\n              formControlName=\"userName\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('userName')\">\n              Login was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'userName')\"\n            >\n              Login is required\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"email\"\n              placeholder=\"Email\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('email')\"\n              [class.is-valid]=\"isControlValid('email')\"\n              formControlName=\"email\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('email')\">\n              Email was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'email')\"\n            >\n              Email is required\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('email', 'email')\"\n            >\n              Email format is incorrect\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label>Date of Birth</label>\n            <div class=\"input-group input-group-solid\">\n              <input\n                type=\"text\"\n                name=\"dob\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"dd/mm/yyyy\"\n                ngbDatepicker\n                #d=\"ngbDatepicker\"\n                [class.is-invalid]=\"isControlInvalid('dob')\"\n                [class.is-valid]=\"isControlValid('dob')\"\n                formControlName=\"dob\"\n                readonly=\"true\"\n              />\n              <div class=\"input-group-append\" (click)=\"d.toggle()\">\n                <span class=\"input-group-text\">\n                  <i class=\"text-dark-50 flaticon-calendar\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('dob')\">\n              Date of Birth was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'dob')\"\n            >\n              Please enter <b>Date of Birth</b> in 'mm/dd/yyyy' format\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter IP Address</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"ipAddress\"\n              placeholder=\"255.255.255.0\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('ipAddress')\"\n              [class.is-valid]=\"isControlValid('ipAddress')\"\n              formControlName=\"ipAddress\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('ipAddress')\">\n              Login was entered correct\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-4\">\n            <label>Select Gender</label>\n            <select\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"gender\"\n              [class.is-invalid]=\"isControlInvalid('gender')\"\n              formControlName=\"gender\"\n            >\n              <option value=\"Female\">Female</option>\n              <option value=\"Male\">Male</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Gender</b></div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label>Select Type</label>\n            <select\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"type\"\n              formControlName=\"type\"\n            >\n              <option value=\"1\">Business</option>\n              <option value=\"2\">Individual</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Type</b></div>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-light btn-elevate mr-2\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancel\n    </button>\n    <ng-container *ngIf=\"customer\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-elevate\"\n        (click)=\"save()\"\n        [disabled]=\"formGroup.invalid\"\n      >\n        Save\n      </button>\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription, of } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { RemarksService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-remarks-modal',\n  templateUrl: './delete-remarks-modal.component.html',\n  styleUrls: ['./delete-remarks-modal.component.scss']\n})\nexport class DeleteRemarksModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private remarksService: RemarksService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteRemarks() {\n    this.isLoading = true;\n    const sb = this.remarksService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Remarks Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Remarks are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected remarks?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteRemarks()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { RemarksService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-remark-modal',\n  templateUrl: './delete-remark-modal.component.html',\n  styleUrls: ['./delete-remark-modal.component.scss']\n})\nexport class DeleteRemarkModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private remraksService: RemarksService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteRemark() {\n    this.isLoading = true;\n    const sb = this.remraksService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Remark Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Remark is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this remark?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteRemark()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState } from '../../../../_metronic/shared/crud-table';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { ProductRemark } from '../../_models/product-remark.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemarksService extends TableService<ProductRemark> implements OnDestroy {\n  API_URL = `${environment.apiUrl}/productRemarks`;\n  constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<ProductRemark>> {\n    return this.http.get<ProductRemark[]>(this.API_URL).pipe(\n      map((response: ProductRemark[]) => {\n        const filteredResult = baseFilter(response.filter(el => el.carId === tableState.entityId), tableState);\n        const result: TableResponseModel<ProductRemark> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","// Services\nexport { CustomersService } from './fake/customers.service'; // You have to comment this, when your real back-end is done\nexport { ProductsService } from './fake/products.service'; // You have to comment this, when your real back-end is done\nexport { SpecificationsService } from './fake/specifications.service'; // You have to comment this, when your real back-end is done\nexport { RemarksService } from './fake/remarks.service'; // You have to comment this, when your real back-end is done\nexport { DealsService } from 'src/app/modules/asset/_services/fake/deals.service'; // You have to comment this, when your real back-end is done\n// export { CustomersService } from './customers.service'; // You have to uncomment this, when your real back-end is done\n// export { ProductsService } from './products.service'; // You have to uncomment this, when your real back-end is done\n// export { SpecificationsService } from './specifications.service'; // You have to uncomment this, when your real back-end is done\n// export { RemarksService } from './remarks.service'; // You have to uncomment this, when your real back-end is done\n","export const SPECIFICATIONS_DICTIONARY: string[] = [\n  'Seats',\n  'Fuel Type',\n  'Stock',\n  'Door count',\n  'Engine',\n  'Transmission',\n  'Drivetrain',\n  'Combined MPG',\n  'Warranty',\n  'Wheels'\n];\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { exhaustMap, map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState, BaseModel } from '../../../../_metronic/shared/crud-table';\nimport { Product } from '../../_models/product.model';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService extends TableService<Product> implements OnDestroy {\n  API_URL = `${environment.apiUrl}/products`;\n  constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<Product>> {\n    return this.http.get<Product[]>(this.API_URL).pipe(\n      map((response: Product[]) => {\n        const filteredResult = baseFilter(response, tableState);\n        const result: TableResponseModel<Product> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\n    return this.http.get<Product[]>(this.API_URL).pipe(\n      map((products: Product[]) => {\n        return products.filter(c => ids.indexOf(c.id) > -1).map(c => {\n          c.status = status;\n          return c;\n        });\n      }),\n      exhaustMap((products: Product[]) => {\n        const tasks$ = [];\n        products.forEach(product => {\n          tasks$.push(this.update(product));\n        });\n        return forkJoin(tasks$);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { Customer } from '../../../_models/customer.model';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-update-customers-status-modal',\n  templateUrl: './update-customers-status-modal.component.html',\n  styleUrls: ['./update-customers-status-modal.component.scss']\n})\nexport class UpdateCustomersStatusModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  status = 2;\n  customers: Customer[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadCustomers();\n  }\n\n  loadCustomers() {\n    const sb = this.customersService.items$.pipe(\n      first()\n    ).subscribe((res: Customer[]) => {\n      this.customers = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  updateCustomersStatus() {\n    this.isLoading = true;\n    const sb = this.customersService.updateStatusForItems(this.ids, +this.status).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Status update for selected customers</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>FIRSTNAME</th>\n        <th>LASTNAME</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of customers\">\n          <td>{{customer.firstName}}</td>\n          <td>{{customer.lastName}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\n              [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\n              <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\n              <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\n              <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"form modal-footer\">\n  <div class=\"form-group mr-2\">\n    <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\n      <option value=\"1\">Suspended</option>\n      <option value=\"2\">Active</option>\n      <option value=\"3\">Pending</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"updateCustomersStatus()\">Update Status</button>\n  </div>\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState } from '../../../../_metronic/shared/crud-table';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { ProductSpecification } from '../../_models/product-specification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpecificationsService extends TableService<ProductSpecification> implements OnDestroy {\n    API_URL = `${environment.apiUrl}/productSpecs`;\n    constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<ProductSpecification>> {\n    return this.http.get<ProductSpecification[]>(this.API_URL).pipe(\n      map((response: ProductSpecification[]) => {\n        const filteredResult = baseFilter(response.filter(el => el.carId === tableState.entityId), tableState);\n        const result: TableResponseModel<ProductSpecification> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Customer } from '../../../_models/customer.model';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-fetch-customers-modal',\n  templateUrl: './fetch-customers-modal.component.html',\n  styleUrls: ['./fetch-customers-modal.component.scss']\n})\nexport class FetchCustomersModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  customers: Customer[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadCustomers();\n  }\n\n  loadCustomers() {\n    const sb = this.customersService.items$.pipe(\n      first()\n    ).subscribe((res: Customer[]) => {\n      this.customers = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    // just imitation, call server for fetching data\n    setTimeout(() => {\n      this.isLoading = false;\n      this.modal.close();\n    }, 1000);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected customers</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>FIRSTNAME</th>\n        <th>LASTNAME</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of customers\">\n          <td>{{customer.firstName}}</td>\n          <td>{{customer.lastName}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\n              [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\n              <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\n              <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\n              <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, first, tap } from 'rxjs/operators';\nimport { ProductSpecification } from '../../../../_models/product-specification.model';\nimport { SPECIFICATIONS_DICTIONARY } from '../../../../_models/specification.dictionary';\nimport { SpecificationsService } from '../../../../_services';\n\nconst EMPTY_SPEC: ProductSpecification = {\n  id: undefined,\n  carId: undefined,\n  specId: 1,\n  specName: '',\n  value: ''\n};\n\n@Component({\n  selector: 'app-edit-spec-modal',\n  templateUrl: './edit-spec-modal.component.html',\n  styleUrls: ['./edit-spec-modal.component.scss']\n})\nexport class EditSpecModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  @Input() productId: number;\n  isLoading$;\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\n  spec: ProductSpecification;\n  formGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private specsService: SpecificationsService,\n    private fb: FormBuilder, public modal: NgbActiveModal\n    ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.specsService.isLoading$;\n    this.loadSpecs();\n  }\n\n  loadSpecs() {\n    if (!this.id) {\n      this.spec = EMPTY_SPEC;\n      this.spec.carId = this.productId;\n      this.loadForm();\n    } else {\n      const sb = this.specsService.getItemById(this.id).pipe(\n        first(),\n        catchError((errorMessage) => {\n          this.modal.dismiss(errorMessage);\n          const empty = EMPTY_SPEC;\n          empty.carId = this.productId;\n          return of(empty);\n        })\n      ).subscribe((spec: ProductSpecification) => {\n        this.spec = spec;\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      value: [this.spec.value, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10000)])],\n      specId: [this.spec.specId, Validators.compose([Validators.nullValidator])],\n    });\n  }\n\n  save() {\n    this.prepareSpec();\n    if (this.spec.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.specsService.update(this.spec).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.spec);\n      }),\n    ).subscribe(res => this.spec = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.specsService.create(this.spec).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.spec);\n      }),\n    ).subscribe((res: ProductSpecification) => this.spec = res);\n    this.subscriptions.push(sbCreate);\n  }\n\n  private prepareSpec() {\n    const formData = this.formGroup.value;\n    this.spec.carId = this.productId;\n    this.spec.specId = formData.specId;\n    this.spec.specName = this.specs[this.spec.specId];\n    this.spec.value = formData.value;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n      <ng-container *ngIf=\"spec\">\n        <ng-container *ngIf=\"spec.id\">Edit</ng-container>\n        <ng-container *ngIf=\"!spec.id\">Create</ng-container>\n        specification\n        <ng-container *ngIf=\"spec.id\"> '{{specs[spec.specId]}}</ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"overlay overlay-block cursor-default modal-body\">\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"overlay-layer bg-transparent\">\n        <div class=\"spinner spinner-lg spinner-success\"></div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"spec\">\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n        <div class=\"form-group row\">\n          <div class=\"col-lg-12\">\n            <label>Select Specification Type</label>\n            <select class=\"form-control form-control-lg form-control-solid\" name=\"specId\" formControlName=\"specId\">\n              <option [value]=\"i\" *ngFor=\"let sp of specs; let i = index\">{{sp}}</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Specification Type</b></div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-xl-12\">\n            <label class=\"form-label\">Enter Value</label>\n            <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" name=\"value\" placeholder=\"Value\"\n              autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('value')\"\n              [class.is-valid]=\"isControlValid('value')\" formControlName=\"value\" />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('value')\">Value was entered correct</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'value')\">Value is required</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'value')\">Value should have at least 3\n              symbols</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'value')\">Value should have maximum 10000\n              symbols</div>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n    <ng-container *ngIf=\"spec\">\n\n      <button type=\"submit\" class=\"btn btn-primary btn-elevate\" (click)=\"save()\"\n        [disabled]=\"formGroup.invalid\">Save</button>\n    </ng-container>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}