{"version":3,"sources":["webpack:///src/app/modules/e-commerce/e-commerce-routing.module.ts","webpack:///src/app/modules/e-commerce/e-commerce.module.ts","webpack:///src/app/modules/e-commerce/products/products.component.ts","webpack:///src/app/modules/e-commerce/products/products.component.html","webpack:///src/app/modules/e-commerce/products/components/fetch-products-modal/fetch-products-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/fetch-products-modal/fetch-products-modal.component.html","webpack:///src/app/modules/e-commerce/products/components/update-products-status-modal/update-products-status-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/update-products-status-modal/update-products-status-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component.html","webpack:///src/app/modules/e-commerce/customers/components/delete-customers-modal/delete-customers-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/delete-customers-modal/delete-customers-modal.component.html","webpack:///src/app/modules/e-commerce/customers/customers.component.ts","webpack:///src/app/modules/e-commerce/customers/customers.component.html","webpack:///src/app/modules/e-commerce/e-commerce.component.ts","webpack:///src/app/modules/e-commerce/e-commerce.component.html","webpack:///src/app/modules/e-commerce/customers/components/delete-customer-modal/delete-customer-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/delete-customer-modal/delete-customer-modal.component.html","webpack:///src/app/modules/e-commerce/_services/fake/customers.service.ts","webpack:///src/app/modules/e-commerce/products/components/delete-product-modal/delete-product-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/delete-product-modal/delete-product-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/remarks.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/remarks.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/product-edit.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/product-edit.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/specifications.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/specifications.component.html","webpack:///src/app/modules/e-commerce/products/components/delete-products-modal/delete-products-modal.component.ts","webpack:///src/app/modules/e-commerce/products/components/delete-products-modal/delete-products-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component.html","webpack:///src/app/modules/e-commerce/customers/components/edit-customer-modal/edit-customer-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/edit-customer-modal/edit-customer-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component.html","webpack:///src/app/modules/e-commerce/_services/fake/remarks.service.ts","webpack:///src/app/modules/e-commerce/_services/index.ts","webpack:///src/app/modules/e-commerce/_models/specification.dictionary.ts","webpack:///src/app/modules/e-commerce/_services/fake/products.service.ts","webpack:///src/app/modules/e-commerce/customers/components/update-customers-status-modal/update-customers-status-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/update-customers-status-modal/update-customers-status-modal.component.html","webpack:///src/app/modules/e-commerce/_services/fake/specifications.service.ts","webpack:///src/app/modules/e-commerce/customers/components/fetch-customers-modal/fetch-customers-modal.component.ts","webpack:///src/app/modules/e-commerce/customers/components/fetch-customers-modal/fetch-customers-modal.component.html","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component.ts","webpack:///src/app/modules/e-commerce/products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component.html"],"names":["routes","path","component","children","redirectTo","pathMatch","ECommerceRoutingModule","forChild","imports","exports","ECommerceModule","declarations","entryComponents","grouping","ProductsComponent","fb","modalService","productsService","subscriptions","filterForm","searchForm","fetch","sb","isLoading$","subscribe","res","isLoading","push","paginator","sorting","forEach","unsubscribe","filterGroup","group","status","condition","searchTerm","controls","valueChanges","filter","get","value","patchState","searchGroup","searchEvent","pipe","val","search","column","isActiveColumn","direction","id","modalRef","open","componentInstance","result","then","ids","getSelectedRows","sort","paginate","selector","templateUrl","styleUrls","FetchProductsModalComponent","modal","products","loadProducts","items$","c","indexOf","errorMessage","dismiss","close","fetchSelected","UpdateProductsStatusModalComponent","updateStatusForItems","undefined","updateProductsStatus","DeleteSpecModalComponent","specsService","err","deleteSpec","DeleteCustomersModalComponent","customersService","deleteItems","deleteCustomers","CustomersComponent","customerService","type","toLowerCase","edit","size","create","ECommerceComponent","DeleteCustomerModalComponent","deleteCustomer","DEFAULT_STATE","entityId","CustomersService","http","API_URL","apiUrl","tableState","response","filteredResult","items","total","tasks$","customers","map","customer","update","providedIn","DeleteProductModalComponent","deleteProduct","RemarksComponent","remarksService","productId","EMPTY_REMARK","carId","text","dueDate","EditRemarkModalComponent","loadRemarks","remark","loadForm","getItemById","empty","formGroup","compose","required","minLength","maxLength","nullValidator","prepareRemark","sbUpdate","sbCreate","formData","controlName","control","valid","dirty","touched","invalid","validation","hasError","provide","useClass","providers","EMPTY_PRODUCT","model","manufacture","modelYear","mileage","description","color","price","VINCode","ProductEditComponent","router","route","tabs","BASIC_TAB","REMARKS_TAB","SPECIFICATIONS_TAB","activeTabId","loadProduct","paramMap","params","Number","navigate","relativeTo","product","previous","Object","assign","min","max","markAllAsTouched","formValues","console","error","tabId","reset","changeTab","FetchRemarksModalComponent","remarks","DeleteSpecsModalComponent","deleteSpecs","SpecificationsComponent","specs","DeleteProductsModalComponent","deleteProducts","FetchSpecsModalComponent","specifications","loadSpecs","EMPTY_CUSTOMER","firstName","lastName","email","userName","gender","dob","dateOfBbirth","ipAddress","EditCustomerModalComponent","loadCustomer","prepareCustomer","Date","DeleteRemarksModalComponent","deleteRemarks","DeleteRemarkModalComponent","remraksService","deleteRemark","RemarksService","el","SPECIFICATIONS_DICTIONARY","ProductsService","UpdateCustomersStatusModalComponent","loadCustomers","updateCustomersStatus","SpecificationsService","FetchCustomersModalComponent","setTimeout","EMPTY_SPEC","specId","specName","EditSpecModalComponent","spec","prepareSpec"],"mappings":"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","file":"modules-e-commerce-e-commerce-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ECommerceComponent } from './e-commerce.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ECommerceComponent,\n    children: [\n      {\n        path: 'customers',\n        component: CustomersComponent,\n      },\n      {\n        path: 'products',\n        component: ProductsComponent,\n      },\n      {\n        path: 'product/add',\n        component: ProductEditComponent\n      },\n      {\n        path: 'product/edit',\n        component: ProductEditComponent\n      },\n      {\n        path: 'product/edit/:id',\n        component: ProductEditComponent\n      },\n      { path: '', redirectTo: 'customers', pathMatch: 'full' },\n      { path: '**', redirectTo: 'customers', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ECommerceRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CustomersComponent } from './customers/customers.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ECommerceComponent } from './e-commerce.component';\nimport { ECommerceRoutingModule } from './e-commerce-routing.module';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeleteCustomerModalComponent } from './customers/components/delete-customer-modal/delete-customer-modal.component';\nimport { DeleteCustomersModalComponent } from './customers/components/delete-customers-modal/delete-customers-modal.component';\nimport { FetchCustomersModalComponent } from './customers/components/fetch-customers-modal/fetch-customers-modal.component';\nimport { UpdateCustomersStatusModalComponent } from './customers/components/update-customers-status-modal/update-customers-status-modal.component';\nimport { EditCustomerModalComponent } from './customers/components/edit-customer-modal/edit-customer-modal.component';\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteProductModalComponent } from './products/components/delete-product-modal/delete-product-modal.component';\nimport { DeleteProductsModalComponent } from './products/components/delete-products-modal/delete-products-modal.component';\nimport { UpdateProductsStatusModalComponent } from './products/components/update-products-status-modal/update-products-status-modal.component';\nimport { FetchProductsModalComponent } from './products/components/fetch-products-modal/fetch-products-modal.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\nimport { RemarksComponent } from './products/product-edit/remarks/remarks.component';\nimport { SpecificationsComponent } from './products/product-edit/specifications/specifications.component';\nimport { DeleteRemarkModalComponent } from './products/product-edit/remarks/delete-remark-modal/delete-remark-modal.component';\nimport { DeleteRemarksModalComponent } from './products/product-edit/remarks/delete-remarks-modal/delete-remarks-modal.component';\nimport { FetchRemarksModalComponent } from './products/product-edit/remarks/fetch-remarks-modal/fetch-remarks-modal.component';\nimport { DeleteSpecModalComponent } from './products/product-edit/specifications/delete-spec-modal/delete-spec-modal.component';\nimport { DeleteSpecsModalComponent } from './products/product-edit/specifications/delete-specs-modal/delete-specs-modal.component';\nimport { FetchSpecsModalComponent } from './products/product-edit/specifications/fetch-specs-modal/fetch-specs-modal.component';\nimport { EditRemarkModalComponent } from './products/product-edit/remarks/edit-remark-modal/edit-remark-modal.component';\nimport { EditSpecModalComponent } from './products/product-edit/specifications/edit-spec-modal/edit-spec-modal.component';\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    ProductsComponent,\n    ECommerceComponent,\n    DeleteCustomerModalComponent,\n    DeleteCustomersModalComponent,\n    FetchCustomersModalComponent,\n    UpdateCustomersStatusModalComponent,\n    EditCustomerModalComponent,\n    DeleteProductModalComponent,\n    DeleteProductsModalComponent,\n    UpdateProductsStatusModalComponent,\n    FetchProductsModalComponent,\n    ProductEditComponent,\n    RemarksComponent,\n    SpecificationsComponent,\n    DeleteRemarkModalComponent,\n    DeleteRemarksModalComponent,\n    FetchRemarksModalComponent,\n    DeleteSpecModalComponent,\n    DeleteSpecsModalComponent,\n    FetchSpecsModalComponent,\n    EditRemarkModalComponent,\n    EditSpecModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ECommerceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbModalModule,\n    NgbDatepickerModule\n  ],\n  entryComponents: [\n    DeleteCustomerModalComponent,\n    DeleteCustomersModalComponent,\n    UpdateCustomersStatusModalComponent,\n    FetchCustomersModalComponent,\n    EditCustomerModalComponent,\n    DeleteProductModalComponent,\n    DeleteProductsModalComponent,\n    UpdateProductsStatusModalComponent,\n    FetchProductsModalComponent,\n    DeleteRemarkModalComponent,\n    DeleteRemarksModalComponent,\n    FetchRemarksModalComponent,\n    DeleteSpecModalComponent,\n    DeleteSpecsModalComponent,\n    FetchSpecsModalComponent,\n    EditRemarkModalComponent,\n    EditSpecModalComponent\n  ]\n})\nexport class ECommerceModule {}\n","// tslint:disable:no-string-literal\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ProductsService } from '../_services';\nimport {\n  GroupingState,\n  PaginatorState,\n  SortState,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n} from '../../../_metronic/shared/crud-table';\nimport { DeleteProductModalComponent } from './components/delete-product-modal/delete-product-modal.component';\nimport { DeleteProductsModalComponent } from './components/delete-products-modal/delete-products-modal.component';\nimport { UpdateProductsStatusModalComponent } from './components/update-products-status-modal/update-products-status-modal.component';\nimport { FetchProductsModalComponent } from './components/fetch-products-modal/fetch-products-modal.component';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent\n  implements\n  OnInit,\n  OnDestroy,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n  IFilterView {\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  filterGroup: FormGroup;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public productsService: ProductsService\n  ) { }\n\n  // angular lifecircle hooks\n  ngOnInit(): void {\n    this.filterForm();\n    this.searchForm();\n    this.productsService.fetch();\n    const sb = this.productsService.isLoading$.subscribe(res => this.isLoading = res);\n    this.subscriptions.push(sb);\n    this.grouping = this.productsService.grouping;\n    this.paginator = this.productsService.paginator;\n    this.sorting = this.productsService.sorting;\n    this.productsService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n\n  // filtration\n  filterForm() {\n    this.filterGroup = this.fb.group({\n      status: [''],\n      condition: [''],\n      searchTerm: [''],\n    });\n    this.subscriptions.push(\n      this.filterGroup.controls.status.valueChanges.subscribe(() =>\n        this.filter()\n      )\n    );\n    this.subscriptions.push(\n      this.filterGroup.controls.condition.valueChanges.subscribe(() => this.filter())\n    );\n  }\n\n  filter() {\n    const filter = {};\n    const status = this.filterGroup.get('status').value;\n    if (status) {\n      filter['status'] = status;\n    }\n\n    const condition = this.filterGroup.get('condition').value;\n    if (condition) {\n      filter['condition'] = condition;\n    }\n    this.productsService.patchState({ filter });\n  }\n\n  // search\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\n  */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n    this.productsService.patchState({ searchTerm });\n  }\n\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.productsService.patchState({ sorting });\n  }\n\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.productsService.patchState({ paginator });\n  }\n  // actions\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteProductModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteProductsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n\n  updateStatusForSelected() {\n    const modalRef = this.modalService.open(\n      UpdateProductsStatusModalComponent\n    );\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchProductsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.productsService.fetch(),\n      () => { }\n    );\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\">Products list</h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <a\n        type=\"button\"\n        class=\"btn btn-primary\"\n        routerLink=\"/ecommerce/product/add\"\n        >New Product</a\n      >\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <!-- begin: Filtration form -->\n    <div class=\"form form-label-right\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-4\">\n          <div class=\"row\" [formGroup]=\"filterGroup\">\n            <div class=\"col-lg-6\">\n              <select\n                class=\"form-control\"\n                name=\"status\"\n                placeholder=\"Filter by Status\"\n                formControlName=\"status\"\n              >\n                <option value=\"\">All</option>\n                <option value=\"1\">Selling</option>\n                <option value=\"2\">Sold</option></select\n              ><small class=\"form-text text-muted\"\n                ><b>Filter</b> by Status</small\n              >\n            </div>\n            <div class=\"col-lg-6\">\n              <select\n                class=\"form-control\"\n                placeholder=\"Filter by Contition\"\n                name=\"condition\"\n                formControlName=\"condition\"\n              >\n                <option value=\"\">All</option>\n                <option value=\"1\">New</option>\n                <option value=\"2\">Used</option></select\n              ><small class=\"form-text text-muted\"\n                ><b>Filter</b> by Condition</small\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-2\" [formGroup]=\"searchGroup\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"searchText\"\n            placeholder=\"Search\"\n            value=\"\"\n            formControlName=\"searchTerm\"\n          /><small class=\"form-text text-muted\"\n            ><b>Search</b> in all fields</small\n          >\n        </div>\n      </div>\n    </div>\n    <!-- end: Filtration form -->\n\n    <!-- begin: Grouping -->\n    <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n      <div class=\"form\">\n        <div\n          class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\"\n        >\n          <div class=\"col-xl-12\">\n            <div class=\"form-group form-group-inline\">\n              <div class=\"form-label form-label-no-wrap\">\n                <label class=\"font-bold font-danger\"\n                  ><span\n                    >Selected records count:\n                    <b>{{ grouping.getSelectedRowsCount() }}</b></span\n                  ></label\n                >\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"deleteSelected()\"\n                >\n                  <i class=\"fa fa-trash\"></i> Delete All</button\n                >&nbsp;\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"fetchSelected()\"\n                >\n                  <i class=\"fa fa-stream\"></i> Fetch Selected</button\n                >&nbsp;\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                  (click)=\"updateStatusForSelected()\"\n                >\n                  <i class=\"fa fa-sync-alt\"></i> Update Status\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <!-- end: Grouping -->\n    <!-- begin:Table -->\n    <div class=\"table-responsive angular-bootstrap-table\">\n      <table\n        class=\"table table-head-custom table-vertical-center overflow-hidden\"\n      >\n        <thead>\n          <th class=\"selection-cell-header\" data-row-selection=\"true\">\n            <label class=\"checkbox checkbox-single\"\n              ><input\n                type=\"checkbox\"\n                (click)=\"grouping.selectAllRows()\"\n                [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span\n            ></label>\n          </th>\n          <th>\n            VIN CODE (ID)\n            <app-sort-icon\n              column=\"VINCode\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            MANUFACTURE\n            <app-sort-icon\n              column=\"manufacture\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            MODEL\n            <app-sort-icon\n              column=\"model\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            YEAR\n            <app-sort-icon\n              column=\"modelYear\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            COLOR\n            <app-sort-icon\n              column=\"color\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            PRICE\n            <app-sort-icon\n              column=\"price\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            STATUS\n            <app-sort-icon\n              column=\"status\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>\n            CONDITION\n            <app-sort-icon\n              column=\"condition\"\n              [activeColumn]=\"sorting.column\"\n              [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"\n            ></app-sort-icon>\n          </th>\n          <th>ACTIONS</th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let product of productsService.items$ | async\">\n            <td class=\"selection-cell\">\n              <label class=\"checkbox checkbox-single\"\n                ><input\n                  type=\"checkbox\"\n                  (click)=\"grouping.selectRow(product.id)\"\n                  [checked]=\"grouping.isRowSelected(product.id)\"\n                />\n                <span></span>\n              </label>\n            </td>\n            <td>{{ product.VINCode }}</td>\n            <td>{{ product.manufacture }}</td>\n            <td>{{ product.model }}</td>\n            <td>{{ product.modelYear }}</td>\n            <td>\n              <span [style.color]=\"product.color\">{{ product.color }}</span>\n            </td>\n            <td>$ {{ product.price }}</td>\n            <td>\n              <span\n                class=\"label label-lg label-inline\"\n                [class.label-light-success]=\"product.status === 1\"\n                [class.label-light-primary]=\"product.status === 2\"\n              >\n                <ng-container *ngIf=\"product.status === 1\"\n                  >Selling</ng-container\n                >\n                <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\n              </span>\n            </td>\n            <td>\n              <ng-container *ngIf=\"product.condition === 1\">NEW</ng-container>\n              <ng-container *ngIf=\"product.condition === 2\">USED</ng-container>\n            </td>\n            <td>\n              <a\n                title=\"Edit product\"\n                class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n                [routerLink]=\"'/ecommerce/product/edit/' + product.id\"\n              >\n                <span\n                  [inlineSVG]=\"\n                    './assets/media/svg/icons/Communication/Write.svg'\n                  \"\n                  cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-primary\"\n                >\n                </span>\n              </a>\n              <a\n                title=\"Delete product\"\n                class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                (click)=\"delete(product.id)\"\n              >\n                <span\n                  [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\"\n                  cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-danger\"\n                >\n                </span>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- end: Table -->\n    <app-paginator\n      class=\"d-flex justify-content-between align-items-center flex-wrap\"\n      [paginator]=\"paginator\"\n      [isLoading]=\"isLoading\"\n      (paginate)=\"paginate($event)\"\n    ></app-paginator>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { from, of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { Product } from '../../../_models/product.model';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-fetch-products-modal',\n  templateUrl: './fetch-products-modal.component.html',\n  styleUrls: ['./fetch-products-modal.component.scss']\n})\nexport class FetchProductsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  products: Product[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  loadProducts() {\n    const sb = this.productsService.items$.pipe(\n      first()\n    ).subscribe((res: Product[]) => {\n      this.products = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    const sb = from([]).pipe( // fake => update to call request method from your server\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => {}),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(errorMessage);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n        if (this.modal) {\n          this.modal.close();\n        }\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected products</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>VIN CODE</th>\n        <th>MANUFACTURE</th>\n        <th>MODEL</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products\">\n          <td>{{product.VINCode}}</td>\n          <td>{{product.manufacture}}</td>\n          <td>{{product.model}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" \n              [class.label-light-success]=\"product.status === 1\"\n              [class.label-light-primary]=\"product.status === 2\"\n            >\n              <ng-container *ngIf=\"product.status === 1\">Selling</ng-container>\n              <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { Product } from '../../../_models/product.model';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-update-products-status-modal',\n  templateUrl: './update-products-status-modal.component.html',\n  styleUrls: ['./update-products-status-modal.component.scss']\n})\nexport class UpdateProductsStatusModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  status = 2;\n  products: Product[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  loadProducts() {\n    const sb = this.productsService.items$.pipe(\n      first()\n    ).subscribe((res: Product[]) => {\n      this.products = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  updateProductsStatus() {\n    this.isLoading = true;\n    const sb = this.productsService.updateStatusForItems(this.ids, +this.status).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Status update for selected products</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>VIN CODE</th>\n        <th>MANUFACTURE</th>\n        <th>MODEL</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products\">\n          <td>{{product.VINCode}}</td>\n          <td>{{product.manufacture}}</td>\n          <td>{{product.model}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" [class.label-light-success]=\"product.status === 1\"\n              [class.label-light-primary]=\"product.status === 2\">\n              <ng-container *ngIf=\"product.status === 1\">Selling</ng-container>\n              <ng-container *ngIf=\"product.status === 2\">Sold</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"form modal-footer\">\n  <div class=\"form-group mr-2\">\n    <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\n      <option value=\"1\">Selling</option>\n      <option value=\"2\">Sold</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"updateProductsStatus()\">Update Status</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { SpecificationsService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-spec-modal',\n  templateUrl: './delete-spec-modal.component.html',\n  styleUrls: ['./delete-spec-modal.component.scss']\n})\nexport class DeleteSpecModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSpec() {\n    this.isLoading = true;\n    const sb = this.specsService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Specification Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Specification is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this specification?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteSpec()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-customers-modal',\n  templateUrl: './delete-customers-modal.component.html',\n  styleUrls: ['./delete-customers-modal.component.scss']\n})\nexport class DeleteCustomersModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteCustomers() {\n    this.isLoading = true;\n    const sb = this.customersService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Customers Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Customers are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected customers?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteCustomers()\">\n      Delete\n    </button>\n  </div>\n</div>","// tslint:disable:no-string-literal\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomersService } from '../_services';\nimport {\n  GroupingState,\n  PaginatorState,\n  SortState,\n  ICreateAction,\n  IEditAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n} from '../../../_metronic/shared/crud-table';\nimport { DeleteCustomerModalComponent } from './components/delete-customer-modal/delete-customer-modal.component';\nimport { DeleteCustomersModalComponent } from './components/delete-customers-modal/delete-customers-modal.component';\nimport { UpdateCustomersStatusModalComponent } from './components/update-customers-status-modal/update-customers-status-modal.component';\nimport { FetchCustomersModalComponent } from './components/fetch-customers-modal/fetch-customers-modal.component';\nimport { EditCustomerModalComponent } from './components/edit-customer-modal/edit-customer-modal.component';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n})\nexport class CustomersComponent\n  implements\n  OnInit,\n  OnDestroy,\n  ICreateAction,\n  IEditAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IFetchSelectedAction,\n  IUpdateStatusForSelectedAction,\n  ISortView,\n  IFilterView,\n  IGroupingView,\n  ISearchView,\n  IFilterView {\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  filterGroup: FormGroup;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public customerService: CustomersService\n  ) { }\n\n  // angular lifecircle hooks\n  ngOnInit(): void {\n    this.filterForm();\n    this.searchForm();\n    this.customerService.fetch();\n    this.grouping = this.customerService.grouping;\n    this.paginator = this.customerService.paginator;\n    this.sorting = this.customerService.sorting;\n    const sb = this.customerService.isLoading$.subscribe(res => this.isLoading = res);\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n\n  // filtration\n  filterForm() {\n    this.filterGroup = this.fb.group({\n      status: [''],\n      type: [''],\n      searchTerm: [''],\n    });\n    this.subscriptions.push(\n      this.filterGroup.controls.status.valueChanges.subscribe(() =>\n        this.filter()\n      )\n    );\n    this.subscriptions.push(\n      this.filterGroup.controls.type.valueChanges.subscribe(() => this.filter())\n    );\n  }\n\n  filter() {\n    const filter = {};\n    const status = this.filterGroup.get('status').value;\n    if (status) {\n      filter['status'] = status;\n    }\n\n    const type = this.filterGroup.get('type').value;\n    if (type) {\n      filter['type'] = type;\n    }\n    this.customerService.patchState({ filter });\n  }\n\n  // search\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n      The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n      we are limiting the amount of server requests emitted to a maximum of one every 150ms\n      */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n      this.customerService.patchState({ searchTerm: searchTerm.toLowerCase() });\n  }\n\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.customerService.patchState({ sorting });\n  }\n\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.customerService.patchState({ paginator });\n  }\n\n  // form actions\n  create() {\n    this.edit(undefined);\n  }\n\n  edit(id: number) {\n    const modalRef = this.modalService.open(EditCustomerModalComponent, { size: 'xl' });\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(() =>\n      this.customerService.fetch(),\n      () => { }\n    );\n  }\n\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteCustomerModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteCustomersModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n\n  updateStatusForSelected() {\n    const modalRef = this.modalService.open(UpdateCustomersStatusModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchCustomersModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(() => this.customerService.fetch(), () => { });\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\">Customers list</h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">New Customer</button>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <!-- begin: Filtration form -->\n    <div class=\"form form-label-right\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-4\">\n          <div class=\"row\" [formGroup]=\"filterGroup\">\n            <div class=\"col-lg-6\">\n              <select class=\"form-control\" name=\"status\" placeholder=\"Filter by Status\" formControlName=\"status\">\n                <option value=\"\">All</option>\n                <option value=\"1\">Susspended</option>\n                <option value=\"2\">Active</option>\n                <option value=\"3\">Pending</option>\n              </select><small class=\"form-text text-muted\"><b>Filter</b> by Status</small>\n            </div>\n            <div class=\"col-lg-6\">\n              <select class=\"form-control\" placeholder=\"Filter by Type\" name=\"type\" formControlName=\"type\">\n                <option value=\"\">All</option>\n                <option value=\"1\">Business</option>\n                <option value=\"2\">Individual</option>\n              </select><small class=\"form-text text-muted\"><b>Filter</b> by Type</small>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-2\" [formGroup]=\"searchGroup\">\n          <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\" value=\"\"\n            formControlName=\"searchTerm\" /><small class=\"form-text text-muted\"><b>Search</b> in all fields</small>\n        </div>\n      </div>\n    </div>\n    <!-- end: Filtration form -->\n\n    <!-- begin: Grouping -->\n    <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n      <div class=\"form\">\n        <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n          <div class=\"col-xl-12\">\n            <div class=\"form-group form-group-inline\">\n              <div class=\"form-label form-label-no-wrap\">\n                <label class=\"font-bold font-danger\"><span>Selected records count:\n                    <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\n              </div>\n              <div>\n                <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"deleteSelected()\">\n                  <i class=\"fa fa-trash\"></i> Delete All\n                </button>&nbsp;\n                <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"fetchSelected()\">\n                  <i class=\"fa fa-stream\"></i> Fetch Selected\n                </button>&nbsp;\n                <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm mr-1\"\n                  (click)=\"updateStatusForSelected()\">\n                  <i class=\"fa fa-sync-alt\"></i> Update Status\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <!-- end: Grouping -->\n\n    <!-- begin:Table -->\n    <div class=\"table-responsive angular-bootstrap-table\">\n      <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n        <thead>\n          <th class=\"selection-cell-header\" data-row-selection=\"true\">\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\n                [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\n          </th>\n          <th>\n            ID\n            <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            FIRSTNAME\n            <app-sort-icon column=\"firstName\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            LASTNAME\n            <app-sort-icon column=\"lastName\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            EMAIL\n            <app-sort-icon column=\"email\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            GENDER\n            <app-sort-icon column=\"gender\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            STATUS\n            <app-sort-icon column=\"status\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>\n            TYPE\n            <app-sort-icon column=\"type\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n              (sort)=\"sort($event)\"></app-sort-icon>\n          </th>\n          <th>ACTIONS</th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let customer of customerService.items$ | async\">\n            <td class=\"selection-cell\">\n              <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(customer.id)\"\n                  [checked]=\"grouping.isRowSelected(customer.id)\" />\n                <span></span>\n              </label>\n            </td>\n            <td>{{ customer.id }}</td>\n            <td>{{ customer.firstName }}</td>\n            <td>{{ customer.lastName }}</td>\n            <td>{{ customer.email }}</td>\n            <td>{{ customer.gender }}</td>\n            <td>\n              <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\n                [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\n                <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\n                <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\n                <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\n              </span>\n            </td>\n            <td>\n              <span class=\"label label-dot label-primary mr-2\" [class.label-success]=\"customer.type === 1\"\n                [class.label-primary]=\"customer.type === 2\"></span>&nbsp;<span class=\"font-bold font-primary\">\n                <ng-container *ngIf=\"customer.type === 1\">Business</ng-container>\n                <ng-container *ngIf=\"customer.type === 2\">Individual</ng-container>\n              </span>\n            </td>\n            <td>\n\n              <a title=\"Edit customer\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n                (click)=\"edit(customer.id)\">\n                <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-primary\">\n                </span>\n              </a>\n\n              <a title=\"Delete customer\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n                (click)=\"delete(customer.id)\">\n                <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\n                  class=\"svg-icon svg-icon-md svg-icon-danger\">\n                </span>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- end: Table -->\n    <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\n      [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-e-commerce',\n  templateUrl: './e-commerce.component.html',\n})\nexport class ECommerceComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-customer-modal',\n  templateUrl: './delete-customer-modal.component.html',\n  styleUrls: ['./delete-customer-modal.component.scss']\n})\nexport class DeleteCustomerModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteCustomer() {\n    this.isLoading = true;\n    const sb = this.customersService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Customer Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Customer is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this customer?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteCustomer()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\nimport { exhaustMap, map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState, BaseModel, PaginatorState, SortState, GroupingState } from '../../../../_metronic/shared/crud-table';\nimport { Customer } from '../../_models/customer.model';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { Router } from '@angular/router';\n\nconst DEFAULT_STATE: ITableState = {\n  filter: {},\n  paginator: new PaginatorState(),\n  sorting: new SortState(),\n  searchTerm: '',\n  grouping: new GroupingState(),\n  entityId: undefined\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService extends TableService<Customer> implements OnDestroy {\n  API_URL = `${environment.apiUrl}/customers`;\n  constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<Customer>> {\n    return this.http.get<Customer[]>(this.API_URL).pipe(\n      map((response: Customer[]) => {\n        const filteredResult = baseFilter(response, tableState);\n        const result: TableResponseModel<Customer> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\n    return this.http.get<Customer[]>(this.API_URL).pipe(\n      map((customers: Customer[]) => {\n        return customers.filter(c => ids.indexOf(c.id) > -1).map(c => {\n          c.status = status;\n          return c;\n        });\n      }),\n      exhaustMap((customers: Customer[]) => {\n        const tasks$ = [];\n        customers.forEach(customer => {\n          tasks$.push(this.update(customer));\n        });\n        return forkJoin(tasks$);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-product-modal',\n  templateUrl: './delete-product-modal.component.html',\n  styleUrls: ['./delete-product-modal.component.scss']\n})\nexport class DeleteProductModalComponent implements OnInit, OnDestroy {\n\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteProduct() {\n    this.isLoading = true;\n    const sb = this.productsService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Product Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Product is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this product?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteProduct()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport {\n  GroupingState,\n  ICreateAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IEditAction,\n  IFetchSelectedAction,\n  IGroupingView,\n  ISearchView,\n  ISortView,\n  PaginatorState,\n  SortState,\n} from '../../../../../_metronic/shared/crud-table';\nimport { RemarksService } from '../../../_services';\nimport { DeleteRemarkModalComponent } from './delete-remark-modal/delete-remark-modal.component';\nimport { DeleteRemarksModalComponent } from './delete-remarks-modal/delete-remarks-modal.component';\nimport { EditRemarkModalComponent } from './edit-remark-modal/edit-remark-modal.component';\nimport { FetchRemarksModalComponent } from './fetch-remarks-modal/fetch-remarks-modal.component';\n\n@Component({\n  selector: 'app-remarks',\n  templateUrl: './remarks.component.html',\n  styleUrls: ['./remarks.component.scss'],\n})\nexport class RemarksComponent\n  implements\n    OnInit,\n    OnDestroy,\n    IDeleteAction,\n    IDeleteSelectedAction,\n    IFetchSelectedAction,\n    ISortView,\n    IGroupingView,\n    ISearchView,\n    IEditAction,\n    ICreateAction {\n  @Input() productId: number;\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public remarksService: RemarksService\n  ) {}\n\n  ngOnInit(): void {\n    this.searchForm();\n    const sb = this.remarksService.isLoading$.subscribe(\n      (res) => (this.isLoading = res)\n    );\n    this.subscriptions.push(sb);\n    this.remarksService.patchState({ entityId: this.productId });\n    this.grouping = this.remarksService.grouping;\n    this.paginator = this.remarksService.paginator;\n    this.sorting = this.remarksService.sorting;\n    this.remarksService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n  //\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\n  */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n    this.remarksService.patchState({ searchTerm });\n  }\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.remarksService.patchState({ sorting });\n  }\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.remarksService.patchState({ paginator });\n  }\n  // actions\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteRemarkModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(\n      () => this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteRemarksModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchRemarksModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  edit(id: number): void {\n    const modalRef = this.modalService.open(EditRemarkModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.componentInstance.productId = this.productId;\n    modalRef.result.then(() =>\n      this.remarksService.fetch(),\n      () => {}\n    );\n  }\n\n  create(): void {\n    this.edit(undefined);\n  }\n}\n","<div class=\"mt-5\">\n  <!-- begin: Filtration form -->\n  <div class=\"form margin-b-30\">\n    <div class=\"form-filtration\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-md-2 margin-bottom-10-mobile\">\n          <form [formGroup]=\"searchGroup\">\n            <div>\n              <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\"\n                formControlName=\"searchTerm\" />\n              <small class=\"form-text text-muted\"><b>Search</b> in all fields</small></div>\n          </form>\n        </div>\n        <div class=\"col-md-8 margin-bottom-10-mobile\"></div>\n        <div class=\"col-md-2 text-right margin-bottom-10-mobile\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">\n            Create new remark\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end: Filtration form -->\n\n  <!-- begin: Grouping -->\n  <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n    <div class=\"form\">\n      <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div class=\"col-xl-12\">\n          <div class=\"form-group form-group-inline\">\n            <div class=\"form-label form-label-no-wrap\">\n              <label class=\"font-bold font-danger\"><span>Selected records count:\n                  <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\n            </div>\n            <div>\n              <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                (click)=\"deleteSelected()\">\n                <i class=\"fa fa-trash\"></i> Delete All\n              </button>&nbsp;\n              <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                (click)=\"fetchSelected()\">\n                <i class=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <!-- end: Grouping -->\n  <!-- begin:Table -->\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th class=\"selection-cell-header\" data-row-selection=\"true\">\n          <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\n              [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\n        </th>\n        <th>\n          ID\n          <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          TEXT\n          <app-sort-icon column=\"text\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          DUE DATE\n          <app-sort-icon column=\"dueDate\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>ACTIONS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let remark of remarksService.items$ | async\">\n          <td class=\"selection-cell\">\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(remark.id)\"\n                [checked]=\"grouping.isRowSelected(remark.id)\" />\n              <span></span>\n            </label>\n          </td>\n          <td>{{ remark.id }}</td>\n          <td>{{ remark.text }}</td>\n          <td>{{ remark.dueDate }}</td>\n          <td>\n            <button title=\"Edit remark\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n              (click)=\"edit(remark.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\n              </span>\n            </button>\n            <button title=\"Delete remark\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n              (click)=\"delete(remark.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\n              </span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <!-- end: Table -->\n  <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\n    [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { RemarksService } from '../../../../_services';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../../../../../_metronic/core';\nimport { ProductRemark } from '../../../../_models/product-remark.model';\nimport { catchError, first, tap } from 'rxjs/operators';\n\nconst EMPTY_REMARK: ProductRemark = {\n  id: undefined,\n  carId: undefined,\n  text: '',\n  type: 1, // Info 1, Note 2, Reminder 3\n  dueDate: ''\n};\n\n@Component({\n  selector: 'app-edit-remark-modal',\n  templateUrl: './edit-remark-modal.component.html',\n  styleUrls: ['./edit-remark-modal.component.scss'],\n  providers: [\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ]\n})\nexport class EditRemarkModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  @Input() productId: number;\n  isLoading$;\n  remark: ProductRemark;\n  formGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private remarksService: RemarksService,\n    private fb: FormBuilder, public modal: NgbActiveModal\n    ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.remarksService.isLoading$;\n    this.loadRemarks();\n  }\n\n  loadRemarks() {\n    if (!this.id) {\n      this.remark = EMPTY_REMARK;\n      this.remark.carId = this.productId;\n      this.loadForm();\n    } else {\n      const sb = this.remarksService.getItemById(this.id).pipe(\n        first(),\n        catchError((errorMessage) => {\n          this.modal.dismiss(errorMessage);\n          const empty = EMPTY_REMARK;\n          empty.carId = this.productId;\n          return of(empty);\n        })\n      ).subscribe((remark: ProductRemark) => {\n        this.remark = remark;\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      text: [this.remark.text, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10000)])],\n      dueDate: [this.remark.dueDate, Validators.compose([Validators.nullValidator])],\n      type: [this.remark.type, Validators.compose([Validators.required])]\n    });\n  }\n\n  save() {\n    this.prepareRemark();\n    if (this.remark.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.remarksService.update(this.remark).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.remark);\n      }),\n    ).subscribe(res => this.remark = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.remarksService.create(this.remark).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.remark);\n      }),\n    ).subscribe((res: ProductRemark) => this.remark = res);\n    this.subscriptions.push(sbCreate);\n  }\n\n  private prepareRemark() {\n    const formData = this.formGroup.value;\n    this.remark.carId = this.productId;\n    this.remark.dueDate = formData.dueDate;\n    this.remark.type = +formData.type;\n    this.remark.text = formData.text;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n      <ng-container *ngIf=\"remark\">\n        <ng-container *ngIf=\"remark.id\">Edit</ng-container>\n        <ng-container *ngIf=\"!remark.id\">Create</ng-container>\n        remark\n        <ng-container *ngIf=\"remark.id\"> with ID '{{remark.id}}</ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"overlay overlay-block cursor-default modal-body\">\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"overlay-layer bg-transparent\">\n        <div class=\"spinner spinner-lg spinner-success\"></div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"remark\">\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n        <div class=\"form-group row\">\n          <div class=\"col-xl-12\">\n\n            <label class=\"form-label\">Enter Text</label>\n            <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" name=\"text\" placeholder=\"Text\"\n              autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('text')\" [class.is-valid]=\"isControlValid('text')\"\n              formControlName=\"text\" />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('text')\">Text was entered correct</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'text')\">Text is required</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'text')\">Text should have at least 3\n              symbols</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'text')\">Text should have maximum 10000\n              symbols</div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-xl-12\">\n            <label>Dute date</label>\n            <div class=\"input-group input-group-solid\">\n              <input type=\"text\" name=\"dueDate\" class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\" placeholder=\"dd/mm/yyyy\" ngbDatepicker #d=\"ngbDatepicker\"\n                [class.is-invalid]=\"isControlInvalid('dueDate')\" [class.is-valid]=\"isControlValid('dueDate')\"\n                formControlName=\"dueDate\" readonly=\"true\" />\n              <div class=\"input-group-append\" (click)=\"d.toggle()\">\n                <span class=\"input-group-text\">\n                  <i class=\"text-dark-50 flaticon-calendar\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('dueDate')\">Due date was entered correct</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'dueDate')\">Please enter <b>Due date</b> in\n              'mm/dd/yyyy' format</div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-12\">\n            <label>Select Type</label>\n            <select class=\"form-control form-control-lg form-control-solid\" name=\"type\" formControlName=\"type\">\n              <option value=\"1\">Info</option>\n              <option value=\"2\">Note</option>\n              <option value=\"3\">Reminder</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Type</b></div>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n    <ng-container *ngIf=\"remark\">\n\n      <button type=\"submit\" class=\"btn btn-primary btn-elevate\" (click)=\"save()\"\n        [disabled]=\"formGroup.invalid\">Save</button>\n    </ng-container>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { Product } from '../../_models/product.model';\nimport { ProductsService } from '../../_services';\n\nconst EMPTY_PRODUCT: Product = {\n  id: undefined,\n  model: '',\n  manufacture: 'Pontiac',\n  modelYear: 2020,\n  mileage: 0,\n  description: '',\n  color: 'Red',\n  price: 0,\n  condition: 1,\n  status: 1,\n  VINCode: '',\n};\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit, OnDestroy {\n  id: number;\n  product: Product;\n  previous: Product;\n  formGroup: FormGroup;\n  isLoading$: Observable<boolean>;\n  errorMessage = '';\n  tabs = {\n    BASIC_TAB: 0,\n    REMARKS_TAB: 1,\n    SPECIFICATIONS_TAB: 2\n  };\n  activeTabId = this.tabs.BASIC_TAB; // 0 => Basic info | 1 => Remarks | 2 => Specifications\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.productsService.isLoading$;\n    this.loadProduct();\n  }\n\n  loadProduct() {\n    const sb = this.route.paramMap.pipe(\n      switchMap(params => {\n        // get id from URL\n        this.id = Number(params.get('id'));\n        if (this.id || this.id > 0) {\n          return this.productsService.getItemById(this.id);\n        }\n        return of(EMPTY_PRODUCT);\n      }),\n      catchError((errorMessage) => {\n        this.errorMessage = errorMessage;\n        return of(undefined);\n      }),\n    ).subscribe((res: Product) => {\n      if (!res) {\n        this.router.navigate(['/products'], { relativeTo: this.route });\n      }\n\n      this.product = res;\n      this.previous = Object.assign({}, res);\n      this.loadForm();\n    });\n    this.subscriptions.push(sb);\n  }\n\n  loadForm() {\n    if (!this.product) {\n      return;\n    }\n\n    this.formGroup = this.fb.group({\n      model: [this.product.model, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      manufacture: [this.product.manufacture],\n      modelYear: [this.product.modelYear, Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.min(1900),\n        Validators.maxLength(4),\n        Validators.max(2023)\n      ])],\n      mileage: [this.product.mileage, Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.min(0),\n        Validators.maxLength(100),\n        Validators.max(1000000)\n      ])],\n      color: [this.product.color],\n      price: [this.product.price],\n      description: [this.product.description],\n      status: [this.product.status],\n      condition: [this.product.condition],\n      VINCode: [this.product.VINCode, Validators.required]\n    });\n  }\n\n  reset() {\n    if (!this.previous) {\n      return;\n    }\n\n    this.product = Object.assign({}, this.previous);\n    this.loadForm();\n  }\n\n  save() {\n    this.formGroup.markAllAsTouched();\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    const formValues = this.formGroup.value;\n    this.product = Object.assign(this.product, formValues);\n    if (this.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.productsService.update(this.product).pipe(\n      tap(() => this.router.navigate(['/ecommerce/products'])),\n      catchError((errorMessage) => {\n        console.error('UPDATE ERROR', errorMessage);\n        return of(this.product);\n      })\n    ).subscribe(res => this.product = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.productsService.create(this.product).pipe(\n      tap(() => this.router.navigate(['/ecommerce/products'])),\n      catchError((errorMessage) => {\n        console.error('UPDATE ERROR', errorMessage);\n        return of(this.product);\n      })\n    ).subscribe(res => this.product = res as Product);\n    this.subscriptions.push(sbCreate);\n  }\n\n  changeTab(tabId: number) {\n    this.activeTabId = tabId;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation: string, controlName: string) {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <ng-container *ngIf=\"isLoading$ | async\">\n    <div class=\"progress progress-modal\">\n      <div\n        class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\n        role=\"progressbar\"\n        style=\"width: 100%\"\n        aria-valuenow=\"100\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      ></div>\n    </div>\n  </ng-container>\n\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\">\n        <ng-container *ngIf=\"product\">\n          {{ id ? \"Edit\" : \"New\" }} product\n          <span *ngIf=\"product && product.id\"\n            >'{{ product.manufacture }} {{ product.model }} -\n            {{ product.modelYear }}'</span\n          >\n        </ng-container>\n        {{ product?.manufacture }}\n      </h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <a type=\"button\" class=\"btn btn-light\" routerLink=\"/ecommerce/products\">\n        <i class=\"fa fa-arrow-left\"></i>Back\n      </a>\n      <button class=\"btn btn-secondary ml-2\" (click)=\"reset()\">\n        <i class=\"fa fa-redo\"></i>Reset\n      </button>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <ul class=\"nav nav-tabs nav-tabs-line\" role=\"tablist\">\n      <li class=\"nav-item cursor-pointer\" (click)=\"changeTab(tabs.BASIC_TAB)\">\n        <a\n          class=\"nav-link\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeTabId === tabs.BASIC_TAB\"\n          [class.active]=\"activeTabId === tabs.BASIC_TAB\"\n        >\n          Basic info\n        </a>\n      </li>\n      <li\n        *ngIf=\"product && product.id\"\n        class=\"nav-item cursor-pointer\"\n        (click)=\"changeTab(tabs.REMARKS_TAB)\"\n      >\n        <a\n          class=\"nav-link\"\n          data-toggle=\"tab\"\n          role=\"button\"\n          [attr.aria-selected]=\"activeTabId === tabs.REMARKS_TAB\"\n          [class.active]=\"activeTabId === tabs.REMARKS_TAB\"\n          >Product remarks</a\n        >\n      </li>\n      <li\n        *ngIf=\"product && product.id\"\n        class=\"nav-item cursor-pointer\"\n        (click)=\"changeTab(tabs.SPECIFICATIONS_TAB)\"\n      >\n        <a\n          class=\"nav-link\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeTabId === tabs.SPECIFICATIONS_TAB\"\n          [class.active]=\"activeTabId === tabs.SPECIFICATIONS_TAB\"\n          >Product specifications</a\n        >\n      </li>\n    </ul>\n\n    <ng-container *ngIf=\"activeTabId === tabs.BASIC_TAB\">\n      <div class=\"mt-5\" *ngIf=\"product\">\n        <form\n          action=\"#\"\n          class=\"form form-label-right\"\n          [formGroup]=\"formGroup\"\n          (ngSubmit)=\"save()\"\n        >\n          <div class=\"form-group row\">\n            <div class=\"col-lg-4\">\n              <label>Enter Model</label>\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"Model\"\n                name=\"model\"\n                [class.is-invalid]=\"isControlInvalid('model')\"\n                [class.is-valid]=\"isControlValid('model')\"\n                formControlName=\"model\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('model')\">\n                Please enter <b>Model</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('model')\">\n                Model was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'model')\"\n              >\n                Model is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'model')\"\n              >\n                Model should have at least 3 symbols\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'model')\"\n              >\n                Model should have maximum 100 symbols\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Manufacture</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"manufacture\"\n                formControlName=\"manufacture\"\n              >\n                <option value=\"Pontiac\">Pontiac</option>\n                <option value=\"Kia\">Kia</option>\n                <option value=\"Lotus\">Lotus</option>\n                <option value=\"Subaru\">Subaru</option>\n                <option value=\"Jeep\">Jeep</option>\n                <option value=\"Isuzu\">Isuzu</option>\n                <option value=\"Mitsubishi\">Mitsubishi</option>\n                <option value=\"Oldsmobile\">Oldsmobile</option>\n                <option value=\"Chevrolet\">Chevrolet</option>\n                <option value=\"Chrysler\">Chrysler</option>\n                <option value=\"Audi\">Audi</option>\n                <option value=\"Suzuki\">Suzuki</option>\n                <option value=\"GMC\">GMC</option>\n                <option value=\"Cadillac\">Cadillac</option>\n                <option value=\"Infinity\">Infinity</option>\n                <option value=\"Mercury\">Mercury</option>\n                <option value=\"Dodge\">Dodge</option>\n                <option value=\"Ram\">Ram</option>\n                <option value=\"Lexus\">Lexus</option>\n                <option value=\"Lamborghini\">Lamborghini</option>\n                <option value=\"Honda\">Honda</option>\n                <option value=\"Nissan\">Nissan</option>\n                <option value=\"Ford\">Ford</option>\n                <option value=\"Hyundai\">Hyundai</option>\n                <option value=\"Saab\">Saab</option>\n                <option value=\"Toyota\">Toyota</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Color</b></div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Enter Model year</label>\n              <input\n                type=\"number\"\n                class=\"form-control form-control-lg form-control-solid\"\n                placeholder=\"Model Year\"\n                name=\"modelYear\"\n                [class.is-invalid]=\"isControlInvalid('modelYear')\"\n                [class.is-valid]=\"isControlValid('modelYear')\"\n                formControlName=\"modelYear\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('modelYear')\">\n                Please enter <b>Model</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('modelYear')\">\n                Model year was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'modelYear')\"\n              >\n                Model year is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'modelYear')\"\n              >\n                Model year should have at least 3 symbols\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('min', 'modelYear')\"\n              >\n                Model year can't be less than 1900\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('max', 'modelYear')\"\n              >\n                Model year can't be more than 2023\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'modelYear')\"\n              >\n                Model year should have maximum 100 symbols\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"col-lg-4\">\n              <label>Enter Mileage</label>\n              <input\n                type=\"number\"\n                class=\"form-control form-control-lg form-control-solid\"\n                placeholder=\"Mileage\"\n                name=\"mileage\"\n                [class.is-invalid]=\"isControlInvalid('mileage')\"\n                [class.is-valid]=\"isControlValid('mileage')\"\n                formControlName=\"mileage\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('mileage')\">\n                Please enter <b>Mileage</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('mileage')\">\n                Mileage was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'mileage')\"\n              >\n                Mileage is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'mileage')\"\n              >\n                Mileage should have at least 1 symbol\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'mileage')\"\n              >\n                Mileage year should have maximum 100 symbols\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Color</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"color\"\n                formControlName=\"color\"\n              >\n                <option value=\"Red\">Red</option>\n                <option value=\"CadetBlue\">CadetBlue</option>\n                <option value=\"Eagle\">Eagle</option>\n                <option value=\"Gold\">Gold</option>\n                <option value=\"LightSlateGrey\">LightSlateGrey</option>\n                <option value=\"RoyalBlue\">RoyalBlue</option>\n                <option value=\"Crimson\">Crimson</option>\n                <option value=\"Blue\">Blue</option>\n                <option value=\"Sienna\">Sienna</option>\n                <option value=\"Indigo\">Indigo</option>\n                <option value=\"Green\">Green</option>\n                <option value=\"Violet\">Violet</option>\n                <option value=\"GoldenRod\">GoldenRod</option>\n                <option value=\"OrangeRed\">OrangeRed</option>\n                <option value=\"Khaki\">Khaki</option>\n                <option value=\"Teal\">Teal</option>\n                <option value=\"Purple\">Purple</option>\n                <option value=\"Orange\">Orange</option>\n                <option value=\"Pink\">Pink</option>\n                <option value=\"Black\">Black</option>\n                <option value=\"DarkTurquoise\">DarkTurquoise</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Color</b></div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Enter Price ($)</label>\n              <input\n                type=\"number\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"Price\"\n                name=\"price\"\n                [class.is-invalid]=\"isControlInvalid('price')\"\n                [class.is-valid]=\"isControlValid('price')\"\n                formControlName=\"price\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('price')\">\n                Please enter <b>Price</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('price')\">\n                Price was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'price')\"\n              >\n                Price is required\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('minlength', 'price')\"\n              >\n                Price should have at least 3 symbols\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('maxLength', 'price')\"\n              >\n                Price should have maximum 100 symbols\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"col-lg-4\">\n              <label>Enter VIN code</label>\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"VIN Code\"\n                name=\"VINCode\"\n                [class.is-invalid]=\"isControlInvalid('VINCode')\"\n                [class.is-valid]=\"isControlValid('VINCode')\"\n                formControlName=\"VINCode\"\n              />\n              <div class=\"feedback\" *ngIf=\"!isControlTouched('VINCode')\">\n                Please enter <b>VIN code</b>\n              </div>\n              <div class=\"valid-feedback\" *ngIf=\"isControlValid('VINCode')\">\n                VIN code was entered correct\n              </div>\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"controlHasError('required', 'VINCode')\"\n              >\n                VIN code is required\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Status</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"status\"\n                formControlName=\"status\"\n              >\n                <option value=\"1\">Selling</option>\n                <option value=\"2\">Sold</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Status</b></div>\n            </div>\n            <div class=\"col-lg-4\">\n              <label>Select Condition</label>\n              <select\n                class=\"form-control form-control-lg form-control-solid\"\n                name=\"condition\"\n                formControlName=\"condition\"\n              >\n                <option value=\"1\">New</option>\n                <option value=\"2\">Used</option>\n              </select>\n              <div class=\"feedback\">Please select <b>Condition</b></div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label>Description</label>\n            <textarea\n              name=\"description\"\n              class=\"form-control form-control-solid\"\n              formControlName=\"description\"\n            ></textarea>\n          </div>\n          <div class=\"float-right\">\n            <a\n              class=\"btn btn-default font-weight-bold mr-2\"\n              routerLink=\"/ecommerce/products\"\n              >Cancel</a\n            >\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary font-weight-bold mr-2\"\n              [disabled]=\"formGroup.invalid\"\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </ng-container>\n\n    <ng-container\n      *ngIf=\"activeTabId === tabs.REMARKS_TAB && product && product.id\"\n    >\n      <app-remarks [productId]=\"product.id\"></app-remarks>\n    </ng-container>\n\n    <ng-container\n      *ngIf=\"activeTabId === tabs.SPECIFICATIONS_TAB && product && product.id\"\n    >\n      <app-specifications [productId]=\"product.id\"></app-specifications>\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { from, of, Subscription } from 'rxjs';\nimport { RemarksService } from '../../../../_services';\nimport { ProductRemark } from '../../../../_models/product-remark.model';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fetch-remarks-modal',\n  templateUrl: './fetch-remarks-modal.component.html',\n  styleUrls: ['./fetch-remarks-modal.component.scss']\n})\nexport class FetchRemarksModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  remarks: ProductRemark[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private remarksService: RemarksService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadRemarks();\n  }\n\n  loadRemarks() {\n    const sb = this.remarksService.items$.pipe(\n      first()\n    ).subscribe((res: ProductRemark[]) => {\n      this.remarks = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    const sb = from([]).pipe( // fake => update to call request method from your server\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected remarks</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>ID</th>\n        <th>TEXT</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let remark of remarks\">\n          <td>{{remark.id}}</td>\n          <td>{{remark.text}}</td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { SpecificationsService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-specs-modal',\n  templateUrl: './delete-specs-modal.component.html',\n  styleUrls: ['./delete-specs-modal.component.scss']\n})\nexport class DeleteSpecsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSpecs() {\n    this.isLoading = true;\n    const sb = this.specsService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Specifications Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Specifications are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected specifications?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteSpecs()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport {\n  GroupingState,\n  ICreateAction,\n  IDeleteAction,\n  IDeleteSelectedAction,\n  IEditAction,\n  IFetchSelectedAction,\n  IGroupingView,\n  ISearchView,\n  ISortView,\n  PaginatorState,\n  SortState,\n} from '../../../../../_metronic/shared/crud-table';\nimport { SPECIFICATIONS_DICTIONARY } from '../../../_models/specification.dictionary';\nimport { SpecificationsService } from '../../../_services';\nimport { DeleteSpecModalComponent } from './delete-spec-modal/delete-spec-modal.component';\nimport { DeleteSpecsModalComponent } from './delete-specs-modal/delete-specs-modal.component';\nimport { EditSpecModalComponent } from './edit-spec-modal/edit-spec-modal.component';\nimport { FetchSpecsModalComponent } from './fetch-specs-modal/fetch-specs-modal.component';\n\n@Component({\n  selector: 'app-specifications',\n  templateUrl: './specifications.component.html',\n  styleUrls: ['./specifications.component.scss'],\n})\nexport class SpecificationsComponent\n  implements\n    OnInit,\n    OnDestroy,\n    IDeleteAction,\n    IDeleteSelectedAction,\n    IFetchSelectedAction,\n    ISortView,\n    IGroupingView,\n    ISearchView,\n    IEditAction,\n    ICreateAction {\n  @Input() productId: number;\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\n  paginator: PaginatorState;\n  sorting: SortState;\n  grouping: GroupingState;\n  isLoading: boolean;\n  searchGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    public specsService: SpecificationsService\n  ) {}\n\n  ngOnInit(): void {\n    this.searchForm();\n    const sb = this.specsService.isLoading$.subscribe(\n      (res) => (this.isLoading = res)\n    );\n    this.subscriptions.push(sb);\n    this.specsService.patchState({ entityId: this.productId });\n    this.grouping = this.specsService.grouping;\n    this.paginator = this.specsService.paginator;\n    this.sorting = this.specsService.sorting;\n    this.specsService.fetch();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sb) => sb.unsubscribe());\n  }\n  //\n  searchForm() {\n    this.searchGroup = this.fb.group({\n      searchTerm: [''],\n    });\n    const searchEvent = this.searchGroup.controls.searchTerm.valueChanges\n      .pipe(\n        /*\n  The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator,\n  we are limiting the amount of server requests emitted to a maximum of one every 150ms\n  */\n        debounceTime(150),\n        distinctUntilChanged()\n      )\n      .subscribe((val) => this.search(val));\n    this.subscriptions.push(searchEvent);\n  }\n\n  search(searchTerm: string) {\n    this.specsService.patchState({ searchTerm });\n  }\n  // sorting\n  sort(column: string) {\n    const sorting = this.sorting;\n    const isActiveColumn = sorting.column === column;\n    if (!isActiveColumn) {\n      sorting.column = column;\n      sorting.direction = 'asc';\n    } else {\n      sorting.direction = sorting.direction === 'asc' ? 'desc' : 'asc';\n    }\n    this.specsService.patchState({ sorting });\n  }\n  // pagination\n  paginate(paginator: PaginatorState) {\n    this.specsService.patchState({ paginator });\n  }\n  // actions\n  delete(id: number) {\n    const modalRef = this.modalService.open(DeleteSpecModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.result.then(\n      () => this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  deleteSelected() {\n    const modalRef = this.modalService.open(DeleteSpecsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  fetchSelected() {\n    const modalRef = this.modalService.open(FetchSpecsModalComponent);\n    modalRef.componentInstance.ids = this.grouping.getSelectedRows();\n    modalRef.result.then(\n      () => this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  edit(id: number): void {\n    const modalRef = this.modalService.open(EditSpecModalComponent);\n    modalRef.componentInstance.id = id;\n    modalRef.componentInstance.productId = this.productId;\n    modalRef.result.then(() =>\n      this.specsService.fetch(),\n      () => {}\n    );\n  }\n\n  create(): void {\n    this.edit(undefined);\n  }\n}\n","<div class=\"mt-5\">\n  <!-- begin: Filtration form -->\n  <div class=\"form margin-b-30\">\n    <div class=\"form-filtration\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-md-2 margin-bottom-10-mobile\">\n          <form [formGroup]=\"searchGroup\">\n            <div>\n              <input type=\"text\" class=\"form-control\" name=\"searchText\" placeholder=\"Search\"\n                formControlName=\"searchTerm\" />\n              <small class=\"form-text text-muted\"><b>Search</b> by VALUE</small></div>\n          </form>\n        </div>\n        <div class=\"col-md-6 margin-bottom-10-mobile\"></div>\n        <div class=\"col-md-4 text-right margin-bottom-10-mobile\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">\n            Create new specification\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end: Filtration form -->\n\n  <!-- begin: Grouping -->\n  <ng-container *ngIf=\"grouping.getSelectedRowsCount()\">\n    <div class=\"form\">\n      <div class=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div class=\"col-xl-12\">\n          <div class=\"form-group form-group-inline\">\n            <div class=\"form-label form-label-no-wrap\">\n              <label class=\"font-bold font-danger\"><span>Selected records count:\n                  <b>{{ grouping.getSelectedRowsCount() }}</b></span></label>\n            </div>\n            <div>\n              <button type=\"button\" class=\"btn btn-danger font-weight-bolder font-size-sm mr-1\"\n                (click)=\"deleteSelected()\">\n                <i class=\"fa fa-trash\"></i> Delete All\n              </button>&nbsp;\n              <button type=\"button\" class=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                (click)=\"fetchSelected()\">\n                <i class=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <!-- end: Grouping -->\n  <!-- begin:Table -->\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th class=\"selection-cell-header\" data-row-selection=\"true\">\n          <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectAllRows()\"\n              [checked]=\"grouping.checkAreAllRowsSelected()\" /><span></span></label>\n        </th>\n        <th>\n          ID\n          <app-sort-icon column=\"id\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          SPECIFICATION TYPE\n          <app-sort-icon column=\"specId\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>\n          VALUE\n          <app-sort-icon column=\"value\" [activeColumn]=\"sorting.column\" [activeDirection]=\"sorting.direction\"\n            (sort)=\"sort($event)\"></app-sort-icon>\n        </th>\n        <th>ACTIONS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let spec of specsService.items$ | async\">\n          <td class=\"selection-cell\">\n            <label class=\"checkbox checkbox-single\"><input type=\"checkbox\" (click)=\"grouping.selectRow(spec.id)\"\n                [checked]=\"grouping.isRowSelected(spec.id)\" />\n              <span></span>\n            </label>\n          </td>\n          <td>{{ spec.id }}</td>\n          <td>{{ specs[spec.specId] }}</td>\n          <td>{{ spec.value }}</td>\n          <td>\n            <button title=\"Edit spec\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n              (click)=\"edit(spec.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Write.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-primary\">\n              </span>\n            </button>\n            <button title=\"Delete specification\" class=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n              (click)=\"delete(spec.id)\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/General/Trash.svg'\" cacheSVG=\"true\"\n                class=\"svg-icon svg-icon-md svg-icon-danger\">\n              </span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <!-- end: Table -->\n  <app-paginator class=\"d-flex justify-content-between align-items-center flex-wrap\" [paginator]=\"paginator\"\n    [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { ProductsService } from '../../../_services';\n\n@Component({\n  selector: 'app-delete-products-modal',\n  templateUrl: './delete-products-modal.component.html',\n  styleUrls: ['./delete-products-modal.component.scss']\n})\nexport class DeleteProductsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private productsService: ProductsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteProducts() {\n    this.isLoading = true;\n    const sb = this.productsService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Products Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Products are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected products?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteProducts()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { from, of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { ProductSpecification } from '../../../../_models/product-specification.model';\nimport { SPECIFICATIONS_DICTIONARY } from '../../../../_models/specification.dictionary';\nimport { SpecificationsService } from '../../../../_services';\n\n@Component({\n  selector: 'app-fetch-specs-modal',\n  templateUrl: './fetch-specs-modal.component.html',\n  styleUrls: ['./fetch-specs-modal.component.scss']\n})\nexport class FetchSpecsModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\n  specifications: ProductSpecification[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private specsService: SpecificationsService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadSpecs();\n  }\n\n  loadSpecs() {\n    const sb = this.specsService.items$.pipe(\n      first()\n    ).subscribe((res: ProductSpecification[]) => {\n      this.specifications = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    const sb = from([]).pipe( // fake => update to call request method from your server\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected specifications</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>ID</th>\n        <th>SPECIFICATION TYPE</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let spec of specifications\">\n          <td>{{spec.id}}</td>\n          <td>{{specs[spec.specId]}}</td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, finalize, first, tap } from 'rxjs/operators';\nimport { Customer } from '../../../_models/customer.model';\nimport { CustomersService } from '../../../_services';\nimport { CustomAdapter, CustomDateParserFormatter, getDateFromString } from '../../../../../_metronic/core';\n\nconst EMPTY_CUSTOMER: Customer = {\n  id: undefined,\n  firstName: '',\n  lastName: '',\n  email: '',\n  userName: '',\n  gender: 'Female',\n  status: 2,\n  dob: undefined,\n  dateOfBbirth: '',\n  ipAddress: '251.237.126.210',\n  type: 2\n};\n\n@Component({\n  selector: 'app-edit-customer-modal',\n  templateUrl: './edit-customer-modal.component.html',\n  styleUrls: ['./edit-customer-modal.component.scss'],\n  // NOTE: For this example we are only providing current component, but probably\n  // NOTE: you will w  ant to provide your main App Module\n  providers: [\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ]\n})\nexport class EditCustomerModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading$;\n  customer: Customer;\n  formGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private customersService: CustomersService,\n    private fb: FormBuilder, public modal: NgbActiveModal\n    ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.customersService.isLoading$;\n    this.loadCustomer();\n  }\n\n  loadCustomer() {\n    if (!this.id) {\n      this.customer = EMPTY_CUSTOMER;\n      this.loadForm();\n    } else {\n      const sb = this.customersService.getItemById(this.id).pipe(\n        first(),\n        catchError((errorMessage) => {\n          this.modal.dismiss(errorMessage);\n          return of(EMPTY_CUSTOMER);\n        })\n      ).subscribe((customer: Customer) => {\n        this.customer = customer;\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      firstName: [this.customer.firstName, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      lastName: [this.customer.lastName, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])],\n      email: [this.customer.email, Validators.compose([Validators.required, Validators.email])],\n      dob: [this.customer.dateOfBbirth, Validators.compose([Validators.nullValidator])],\n      userName: [this.customer.userName, Validators.compose([Validators.required])],\n      gender: [this.customer.gender, Validators.compose([Validators.required])],\n      ipAddress: [this.customer.ipAddress],\n      type: [this.customer.type, Validators.compose([Validators.required])]\n    });\n  }\n\n  save() {\n    this.prepareCustomer();\n    if (this.customer.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.customersService.update(this.customer).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.customer);\n      }),\n    ).subscribe(res => this.customer = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.customersService.create(this.customer).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.customer);\n      }),\n    ).subscribe((res: Customer) => this.customer = res);\n    this.subscriptions.push(sbCreate);\n  }\n\n  private prepareCustomer() {\n    const formData = this.formGroup.value;\n    this.customer.dob = new Date(formData.dob);\n    this.customer.email = formData.email;\n    this.customer.firstName = formData.firstName;\n    this.customer.dateOfBbirth = formData.dob;\n    this.customer.ipAddress = formData.ipAddress;\n    this.customer.lastName = formData.lastName;\n    this.customer.type = +formData.type;\n    this.customer.userName = formData.userName;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n      <ng-container *ngIf=\"customer\">\n        <ng-container *ngIf=\"customer.id\">Edit</ng-container>\n        <ng-container *ngIf=\"!customer.id\">Create</ng-container>\n        customer\n        <ng-container *ngIf=\"customer.id\"\n          >'{{ customer.firstName }} {{ customer.lastName }}'</ng-container\n        >\n      </ng-container>\n    </div>\n  </div>\n  <div\n    class=\"overlay overlay-block cursor-default modal-body\"\n    style=\"min-height: 404px\"\n  >\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"overlay-layer bg-transparent\">\n        <div class=\"spinner spinner-lg spinner-success\"></div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"customer\">\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n        <div class=\"form-group row\">\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter First name</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"firstName\"\n              placeholder=\"First Name\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('firstName')\"\n              [class.is-valid]=\"isControlValid('firstName')\"\n              formControlName=\"firstName\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('firstName')\">\n              First name was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'firstName')\"\n            >\n              First name is required\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('minlength', 'firstName')\"\n            >\n              First name should have at least 3 symbols\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('maxlength', 'firstName')\"\n            >\n              First name should have maximum 100 symbols\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter Last name</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid is-invalid\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('lastName')\"\n              [class.is-valid]=\"isControlValid('lastName')\"\n              formControlName=\"lastName\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('lastName')\">\n              Last name was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'lastName')\"\n            >\n              Last name is required\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('minlength', 'lastName')\"\n            >\n              Last name should have at least 3 symbols\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('maxLength', 'lastName')\"\n            >\n              Last name should have maximum 100 symbols\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter Login</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"userName\"\n              placeholder=\"Login\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('userName')\"\n              [class.is-valid]=\"isControlValid('userName')\"\n              formControlName=\"userName\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('userName')\">\n              Login was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'userName')\"\n            >\n              Login is required\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"email\"\n              placeholder=\"Email\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('email')\"\n              [class.is-valid]=\"isControlValid('email')\"\n              formControlName=\"email\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('email')\">\n              Email was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'email')\"\n            >\n              Email is required\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('email', 'email')\"\n            >\n              Email format is incorrect\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label>Date of Birth</label>\n            <div class=\"input-group input-group-solid\">\n              <input\n                type=\"text\"\n                name=\"dob\"\n                class=\"form-control form-control-lg form-control-solid\"\n                autocomplete=\"off\"\n                placeholder=\"dd/mm/yyyy\"\n                ngbDatepicker\n                #d=\"ngbDatepicker\"\n                [class.is-invalid]=\"isControlInvalid('dob')\"\n                [class.is-valid]=\"isControlValid('dob')\"\n                formControlName=\"dob\"\n                readonly=\"true\"\n              />\n              <div class=\"input-group-append\" (click)=\"d.toggle()\">\n                <span class=\"input-group-text\">\n                  <i class=\"text-dark-50 flaticon-calendar\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('dob')\">\n              Date of Birth was entered correct\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"controlHasError('required', 'dob')\"\n            >\n              Please enter <b>Date of Birth</b> in 'mm/dd/yyyy' format\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label class=\"form-label\">Enter IP Address</label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"ipAddress\"\n              placeholder=\"255.255.255.0\"\n              autocomplete=\"off\"\n              [class.is-invalid]=\"isControlInvalid('ipAddress')\"\n              [class.is-valid]=\"isControlValid('ipAddress')\"\n              formControlName=\"ipAddress\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('ipAddress')\">\n              Login was entered correct\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-4\">\n            <label>Select Gender</label>\n            <select\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"gender\"\n              [class.is-invalid]=\"isControlInvalid('gender')\"\n              formControlName=\"gender\"\n            >\n              <option value=\"Female\">Female</option>\n              <option value=\"Male\">Male</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Gender</b></div>\n          </div>\n          <div class=\"col-lg-4\">\n            <label>Select Type</label>\n            <select\n              class=\"form-control form-control-lg form-control-solid\"\n              name=\"type\"\n              formControlName=\"type\"\n            >\n              <option value=\"1\">Business</option>\n              <option value=\"2\">Individual</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Type</b></div>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-light btn-elevate mr-2\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancel\n    </button>\n    <ng-container *ngIf=\"customer\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-elevate\"\n        (click)=\"save()\"\n        [disabled]=\"formGroup.invalid\"\n      >\n        Save\n      </button>\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription, of } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { RemarksService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-remarks-modal',\n  templateUrl: './delete-remarks-modal.component.html',\n  styleUrls: ['./delete-remarks-modal.component.scss']\n})\nexport class DeleteRemarksModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private remarksService: RemarksService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteRemarks() {\n    this.isLoading = true;\n    const sb = this.remarksService.deleteItems(this.ids).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Remarks Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Remarks are deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete selected remarks?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteRemarks()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, tap } from 'rxjs/operators';\nimport { RemarksService } from '../../../../_services';\n\n@Component({\n  selector: 'app-delete-remark-modal',\n  templateUrl: './delete-remark-modal.component.html',\n  styleUrls: ['./delete-remark-modal.component.scss']\n})\nexport class DeleteRemarkModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private remraksService: RemarksService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteRemark() {\n    this.isLoading = true;\n    const sb = this.remraksService.delete(this.id).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((err) => {\n        this.modal.dismiss(err);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n  <div class=\"progress progress-modal\">\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n      style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n  </div>\n</ng-container>\n\n<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Remark Delete</div>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"isLoading\">\n    <span>Remark is deleting...</span>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isLoading\">\n    <span>Are you sure to permanently delete this remark?</span>\n  </ng-container>\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-1\" (click)=\"modal.dismiss()\">\n      Cancel\n    </button>&nbsp;\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"deleteRemark()\">\n      Delete\n    </button>\n  </div>\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState } from '../../../../_metronic/shared/crud-table';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { ProductRemark } from '../../_models/product-remark.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemarksService extends TableService<ProductRemark> implements OnDestroy {\n  API_URL = `${environment.apiUrl}/productRemarks`;\n  constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<ProductRemark>> {\n    return this.http.get<ProductRemark[]>(this.API_URL).pipe(\n      map((response: ProductRemark[]) => {\n        const filteredResult = baseFilter(response.filter(el => el.carId === tableState.entityId), tableState);\n        const result: TableResponseModel<ProductRemark> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","// Services\nexport { CustomersService } from './fake/customers.service'; // You have to comment this, when your real back-end is done\nexport { ProductsService } from './fake/products.service'; // You have to comment this, when your real back-end is done\nexport { SpecificationsService } from './fake/specifications.service'; // You have to comment this, when your real back-end is done\nexport { RemarksService } from './fake/remarks.service'; // You have to comment this, when your real back-end is done\nexport { DealsService } from 'src/app/modules/asset/_services/fake/deals.service'; // You have to comment this, when your real back-end is done\n// export { CustomersService } from './customers.service'; // You have to uncomment this, when your real back-end is done\n// export { ProductsService } from './products.service'; // You have to uncomment this, when your real back-end is done\n// export { SpecificationsService } from './specifications.service'; // You have to uncomment this, when your real back-end is done\n// export { RemarksService } from './remarks.service'; // You have to uncomment this, when your real back-end is done\n","export const SPECIFICATIONS_DICTIONARY: string[] = [\n  'Seats',\n  'Fuel Type',\n  'Stock',\n  'Door count',\n  'Engine',\n  'Transmission',\n  'Drivetrain',\n  'Combined MPG',\n  'Warranty',\n  'Wheels'\n];\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { exhaustMap, map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState, BaseModel } from '../../../../_metronic/shared/crud-table';\nimport { Product } from '../../_models/product.model';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService extends TableService<Product> implements OnDestroy {\n  API_URL = `${environment.apiUrl}/products`;\n  constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<Product>> {\n    return this.http.get<Product[]>(this.API_URL).pipe(\n      map((response: Product[]) => {\n        const filteredResult = baseFilter(response, tableState);\n        const result: TableResponseModel<Product> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  updateStatusForItems(ids: number[], status: number): Observable<any> {\n    return this.http.get<Product[]>(this.API_URL).pipe(\n      map((products: Product[]) => {\n        return products.filter(c => ids.indexOf(c.id) > -1).map(c => {\n          c.status = status;\n          return c;\n        });\n      }),\n      exhaustMap((products: Product[]) => {\n        const tasks$ = [];\n        products.forEach(product => {\n          tasks$.push(this.update(product));\n        });\n        return forkJoin(tasks$);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, delay, finalize, first, tap } from 'rxjs/operators';\nimport { Customer } from '../../../_models/customer.model';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-update-customers-status-modal',\n  templateUrl: './update-customers-status-modal.component.html',\n  styleUrls: ['./update-customers-status-modal.component.scss']\n})\nexport class UpdateCustomersStatusModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  status = 2;\n  customers: Customer[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadCustomers();\n  }\n\n  loadCustomers() {\n    const sb = this.customersService.items$.pipe(\n      first()\n    ).subscribe((res: Customer[]) => {\n      this.customers = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  updateCustomersStatus() {\n    this.isLoading = true;\n    const sb = this.customersService.updateStatusForItems(this.ids, +this.status).pipe(\n      delay(1000), // Remove it from your code (just for showing loading)\n      tap(() => this.modal.close()),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(undefined);\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe();\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Status update for selected customers</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>FIRSTNAME</th>\n        <th>LASTNAME</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of customers\">\n          <td>{{customer.firstName}}</td>\n          <td>{{customer.lastName}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\n              [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\n              <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\n              <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\n              <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"form modal-footer\">\n  <div class=\"form-group mr-2\">\n    <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\n      <option value=\"1\">Suspended</option>\n      <option value=\"2\">Active</option>\n      <option value=\"3\">Pending</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"updateCustomersStatus()\">Update Status</button>\n  </div>\n</div>","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TableService, TableResponseModel, ITableState } from '../../../../_metronic/shared/crud-table';\nimport { baseFilter } from '../../../../_fake/fake-helpers/http-extenstions';\nimport { environment } from '../../../../../environments/environment';\nimport { ProductSpecification } from '../../_models/product-specification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpecificationsService extends TableService<ProductSpecification> implements OnDestroy {\n    API_URL = `${environment.apiUrl}/productSpecs`;\n    constructor(@Inject(HttpClient) http) {\n    super(http);\n  }\n\n  // READ\n  find(tableState: ITableState): Observable<TableResponseModel<ProductSpecification>> {\n    return this.http.get<ProductSpecification[]>(this.API_URL).pipe(\n      map((response: ProductSpecification[]) => {\n        const filteredResult = baseFilter(response.filter(el => el.carId === tableState.entityId), tableState);\n        const result: TableResponseModel<ProductSpecification> = {\n          items: filteredResult.items,\n          total: filteredResult.total\n        };\n        return result;\n      })\n    );\n  }\n\n  deleteItems(ids: number[] = []): Observable<any> {\n    const tasks$ = [];\n    ids.forEach(id => {\n      tasks$.push(this.delete(id));\n    });\n    return forkJoin(tasks$);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Customer } from '../../../_models/customer.model';\nimport { CustomersService } from '../../../_services';\n\n@Component({\n  selector: 'app-fetch-customers-modal',\n  templateUrl: './fetch-customers-modal.component.html',\n  styleUrls: ['./fetch-customers-modal.component.scss']\n})\nexport class FetchCustomersModalComponent implements OnInit, OnDestroy {\n  @Input() ids: number[];\n  customers: Customer[] = [];\n  isLoading = false;\n  subscriptions: Subscription[] = [];\n\n  constructor(private customersService: CustomersService, public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.loadCustomers();\n  }\n\n  loadCustomers() {\n    const sb = this.customersService.items$.pipe(\n      first()\n    ).subscribe((res: Customer[]) => {\n      this.customers = res.filter(c => this.ids.indexOf(c.id) > -1);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  fetchSelected() {\n    this.isLoading = true;\n    // just imitation, call server for fetching data\n    setTimeout(() => {\n      this.isLoading = false;\n      this.modal.close();\n    }, 1000);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n}\n","<div class=\"modal-header\">\n  <div class=\"modal-title h4\">Fetch selected customers</div>\n</div>\n<div class=\"modal-body overlay overlay-block cursor-default\">\n  <ng-container *ngIf=\"isLoading\">\n    <div class=\"overlay-layer\">\n      <div class=\"spinner spinner-lg spinner-primary\"></div>\n    </div>\n  </ng-container>\n\n  <div class=\"table-responsive angular-bootstrap-table\">\n    <table class=\"table table-head-custom table-vertical-center overflow-hidden\">\n      <thead>\n        <th>FIRSTNAME</th>\n        <th>LASTNAME</th>\n        <th>STATUS</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of customers\">\n          <td>{{customer.firstName}}</td>\n          <td>{{customer.lastName}}</td>\n          <td>\n            <span class=\"label label-lg label-inline\" [class.label-light-danger]=\"customer.status === 1\"\n              [class.label-light-success]=\"customer.status === 2\" [class.label-light-primary]=\"customer.status === 3\">\n              <ng-container *ngIf=\"customer.status === 1\">Suspended</ng-container>\n              <ng-container *ngIf=\"customer.status === 2\">Active</ng-container>\n              <ng-container *ngIf=\"customer.status === 3\">Pending</ng-container>\n            </span>\n          </td>\n      </tbody>\n    </table>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div>\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-3\" (click)=\"modal.dismiss()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary btn-elevate\" (click)=\"fetchSelected()\">Fetch</button>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, first, tap } from 'rxjs/operators';\nimport { ProductSpecification } from '../../../../_models/product-specification.model';\nimport { SPECIFICATIONS_DICTIONARY } from '../../../../_models/specification.dictionary';\nimport { SpecificationsService } from '../../../../_services';\n\nconst EMPTY_SPEC: ProductSpecification = {\n  id: undefined,\n  carId: undefined,\n  specId: 1,\n  specName: '',\n  value: ''\n};\n\n@Component({\n  selector: 'app-edit-spec-modal',\n  templateUrl: './edit-spec-modal.component.html',\n  styleUrls: ['./edit-spec-modal.component.scss']\n})\nexport class EditSpecModalComponent implements OnInit, OnDestroy {\n  @Input() id: number;\n  @Input() productId: number;\n  isLoading$;\n  specs: string[] = SPECIFICATIONS_DICTIONARY;\n  spec: ProductSpecification;\n  formGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private specsService: SpecificationsService,\n    private fb: FormBuilder, public modal: NgbActiveModal\n    ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.specsService.isLoading$;\n    this.loadSpecs();\n  }\n\n  loadSpecs() {\n    if (!this.id) {\n      this.spec = EMPTY_SPEC;\n      this.spec.carId = this.productId;\n      this.loadForm();\n    } else {\n      const sb = this.specsService.getItemById(this.id).pipe(\n        first(),\n        catchError((errorMessage) => {\n          this.modal.dismiss(errorMessage);\n          const empty = EMPTY_SPEC;\n          empty.carId = this.productId;\n          return of(empty);\n        })\n      ).subscribe((spec: ProductSpecification) => {\n        this.spec = spec;\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      value: [this.spec.value, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10000)])],\n      specId: [this.spec.specId, Validators.compose([Validators.nullValidator])],\n    });\n  }\n\n  save() {\n    this.prepareSpec();\n    if (this.spec.id) {\n      this.edit();\n    } else {\n      this.create();\n    }\n  }\n\n  edit() {\n    const sbUpdate = this.specsService.update(this.spec).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.spec);\n      }),\n    ).subscribe(res => this.spec = res);\n    this.subscriptions.push(sbUpdate);\n  }\n\n  create() {\n    const sbCreate = this.specsService.create(this.spec).pipe(\n      tap(() => {\n        this.modal.close();\n      }),\n      catchError((errorMessage) => {\n        this.modal.dismiss(errorMessage);\n        return of(this.spec);\n      }),\n    ).subscribe((res: ProductSpecification) => this.spec = res);\n    this.subscriptions.push(sbCreate);\n  }\n\n  private prepareSpec() {\n    const formData = this.formGroup.value;\n    this.spec.carId = this.productId;\n    this.spec.specId = formData.specId;\n    this.spec.specName = this.specs[this.spec.specId];\n    this.spec.value = formData.value;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n      <ng-container *ngIf=\"spec\">\n        <ng-container *ngIf=\"spec.id\">Edit</ng-container>\n        <ng-container *ngIf=\"!spec.id\">Create</ng-container>\n        specification\n        <ng-container *ngIf=\"spec.id\"> '{{specs[spec.specId]}}</ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"overlay overlay-block cursor-default modal-body\">\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"overlay-layer bg-transparent\">\n        <div class=\"spinner spinner-lg spinner-success\"></div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"spec\">\n      <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n        <div class=\"form-group row\">\n          <div class=\"col-lg-12\">\n            <label>Select Specification Type</label>\n            <select class=\"form-control form-control-lg form-control-solid\" name=\"specId\" formControlName=\"specId\">\n              <option [value]=\"i\" *ngFor=\"let sp of specs; let i = index\">{{sp}}</option>\n            </select>\n            <div class=\"feedback\">Please select <b>Specification Type</b></div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-xl-12\">\n            <label class=\"form-label\">Enter Value</label>\n            <input type=\"text\" class=\"form-control form-control-lg form-control-solid\" name=\"value\" placeholder=\"Value\"\n              autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('value')\"\n              [class.is-valid]=\"isControlValid('value')\" formControlName=\"value\" />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('value')\">Value was entered correct</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'value')\">Value is required</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'value')\">Value should have at least 3\n              symbols</div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('maxLength', 'value')\">Value should have maximum 10000\n              symbols</div>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n    <ng-container *ngIf=\"spec\">\n\n      <button type=\"submit\" class=\"btn btn-primary btn-elevate\" (click)=\"save()\"\n        [disabled]=\"formGroup.invalid\">Save</button>\n    </ng-container>\n  </div>\n</div>"]}